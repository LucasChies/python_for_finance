{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPJUJBJ/y9YL3MoD+HPKL0G"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2dI5sT3quDWu","executionInfo":{"status":"ok","timestamp":1683718760788,"user_tz":180,"elapsed":15430,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"934160a7-2de1-4c9c-e6a4-220f2a1821c4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: yfinance in /usr/local/lib/python3.10/dist-packages (0.2.18)\n","Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.5.3)\n","Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.22.4)\n","Requirement already satisfied: requests>=2.26 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.27.1)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.10/dist-packages (from yfinance) (0.0.11)\n","Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.9.2)\n","Requirement already satisfied: appdirs>=1.4.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.4.4)\n","Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2022.7.1)\n","Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.3.7)\n","Requirement already satisfied: cryptography>=3.3.2 in /usr/local/lib/python3.10/dist-packages (from yfinance) (40.0.2)\n","Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.11.2)\n","Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.4.1)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/dist-packages (from cryptography>=3.3.2->yfinance) (1.15.1)\n","Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26->yfinance) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26->yfinance) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26->yfinance) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26->yfinance) (3.4)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.12->cryptography>=3.3.2->yfinance) (2.21)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting mplfinance\n","  Downloading mplfinance-0.12.9b7-py3-none-any.whl (73 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.1/73.1 kB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from mplfinance) (3.7.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from mplfinance) (1.5.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mplfinance) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->mplfinance) (2022.7.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->mplfinance) (1.16.0)\n","Installing collected packages: mplfinance\n","Successfully installed mplfinance-0.12.9b7\n"]}],"source":["!pip install pandas\n","!pip install yfinance\n","!pip install mplfinance"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import yfinance as yf\n","import mplfinance as mpf\n","import plotly.graph_objects as go\n","from datetime import datetime"],"metadata":{"id":"vw0qc6rb0uEz","executionInfo":{"status":"ok","timestamp":1683718771288,"user_tz":180,"elapsed":1627,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["# Obtento dados OHLC (High and Low on candles)"],"metadata":{"id":"lVFzfmUg3J6v"}},{"cell_type":"code","source":["# Pegando dados do IBOV\n","df = yf.download('^BVSP', start='2022-01-01', end='2023-01-01')\n","mpf.plot(df[-30:], type='candle')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":509},"id":"a9yaZ8pb1lSe","executionInfo":{"status":"ok","timestamp":1683718775415,"user_tz":180,"elapsed":1883,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"0420d1b1-bece-47e7-8f55-f4af96371524"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x575 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Construindo as funções\n","\n","Retomando os dados diários do IBOV em 2022 e checar o candle do dia 27/12, que é um fundo segundo metodologia para 2 candles.\n","\n","Atentar para o candle de referência atende às duas regras:\n","\n","\n","\n","1.   Mínima (candle referência) é menor que a dos dois candles anteriores\n","2.   Mínima (candle referência) é menor que d dos dois candles posteriores\n","\n"],"metadata":{"id":"vEH-q4y_5ilr"}},{"cell_type":"code","source":["# Filtrando apenas os últimos 7 candles, para análise\n","\n","mpf.plot(df[-7:], type=\"candle\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"KUfJbLVR6TvZ","executionInfo":{"status":"ok","timestamp":1683718779802,"user_tz":180,"elapsed":1751,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"ace5e171-0b2e-447b-b720-ae5cb0d3dbd2"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x575 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Fundo será quando a minha mínima for menor que alguns candles para trás e para frente.\n","\n","Só saberemos que é um fundo quando o preço se deslocou para frente."],"metadata":{"id":"y4eB0psR6tdE"}},{"cell_type":"code","source":["# Filtrando apenas os candles posteriores, para análise\n","\n","mpf.plot(df[:10], type=\"candle\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"JqC0qJNO7KSW","executionInfo":{"status":"ok","timestamp":1683718782666,"user_tz":180,"elapsed":23,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"957ab40a-a1c4-400f-d03b-afda90307ed0"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x575 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Função para testar se a minha mínima é menor ou igual a mínima dos 2 candles anteriores.\n","# a função rolling inclui a própria linha, então estamos usando o \"closed=left\", para não incluir o valor da própria linha\n","# sem o \"=\" ele não irá detectar fundos duplos. (Fundos duplos são dois candles com mínimas iguais)\n","\n","df['Low'] <= df['Low'].rolling(2, closed='left').min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U5ywBKjI79rK","executionInfo":{"status":"ok","timestamp":1683718785915,"user_tz":180,"elapsed":11,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"5e3a1c0e-b81a-4dc9-f3df-7e033f3ad279"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date\n","2022-01-03    False\n","2022-01-04    False\n","2022-01-05     True\n","2022-01-06    False\n","2022-01-07    False\n","              ...  \n","2022-12-23    False\n","2022-12-26    False\n","2022-12-27     True\n","2022-12-28    False\n","2022-12-29    False\n","Name: Low, Length: 250, dtype: bool"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["O retorno é um booleando (true or false) indicando se a condição passada é atendida."],"metadata":{"id":"-5C2Z_7e-UUQ"}},{"cell_type":"code","source":["# Acessando linhas posteriores e trazendo as mínimas\n","# Com o iloc está invertendo o dataframe, acessando os últimos dados \n","\n","df_invertido = df.iloc[::-1]\n","df_invertido.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"Q4MCj6T89qsl","executionInfo":{"status":"ok","timestamp":1683718789279,"user_tz":180,"elapsed":497,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"ca44874a-fa56-4e1f-ac5f-695569b32ec5"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Open      High       Low     Close  Adj Close    Volume\n","Date                                                                   \n","2022-12-29  110237.0  111178.0  109560.0  110031.0   110031.0  13389100\n","2022-12-28  108578.0  110536.0  108578.0  110237.0   110237.0  11193900\n","2022-12-27  108739.0  109353.0  107418.0  108347.0   108347.0  11158100\n","2022-12-26  109699.0  109755.0  108309.0  108738.0   108738.0   5219500\n","2022-12-23  107552.0  109994.0  107552.0  109698.0   109698.0  12847100"],"text/html":["\n","  <div id=\"df-a17f38f7-52c7-4efd-ac25-5a79a086576b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-12-29</th>\n","      <td>110237.0</td>\n","      <td>111178.0</td>\n","      <td>109560.0</td>\n","      <td>110031.0</td>\n","      <td>110031.0</td>\n","      <td>13389100</td>\n","    </tr>\n","    <tr>\n","      <th>2022-12-28</th>\n","      <td>108578.0</td>\n","      <td>110536.0</td>\n","      <td>108578.0</td>\n","      <td>110237.0</td>\n","      <td>110237.0</td>\n","      <td>11193900</td>\n","    </tr>\n","    <tr>\n","      <th>2022-12-27</th>\n","      <td>108739.0</td>\n","      <td>109353.0</td>\n","      <td>107418.0</td>\n","      <td>108347.0</td>\n","      <td>108347.0</td>\n","      <td>11158100</td>\n","    </tr>\n","    <tr>\n","      <th>2022-12-26</th>\n","      <td>109699.0</td>\n","      <td>109755.0</td>\n","      <td>108309.0</td>\n","      <td>108738.0</td>\n","      <td>108738.0</td>\n","      <td>5219500</td>\n","    </tr>\n","    <tr>\n","      <th>2022-12-23</th>\n","      <td>107552.0</td>\n","      <td>109994.0</td>\n","      <td>107552.0</td>\n","      <td>109698.0</td>\n","      <td>109698.0</td>\n","      <td>12847100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a17f38f7-52c7-4efd-ac25-5a79a086576b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a17f38f7-52c7-4efd-ac25-5a79a086576b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a17f38f7-52c7-4efd-ac25-5a79a086576b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Acessando linhas posteriores e trazendo as mínimas (no dataframe invertido)\n","\n","df_invertido = df.iloc[::-1]\n","df_invertido['Low'] <= df_invertido['Low'].rolling(2, closed='left').min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yBeW5g1c_6rw","executionInfo":{"status":"ok","timestamp":1683718790878,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"e290d40f-200f-4694-fafd-d847feba53bf"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date\n","2022-12-29    False\n","2022-12-28    False\n","2022-12-27     True\n","2022-12-26    False\n","2022-12-23    False\n","              ...  \n","2022-01-07    False\n","2022-01-06     True\n","2022-01-05     True\n","2022-01-04    False\n","2022-01-03    False\n","Name: Low, Length: 250, dtype: bool"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Criando funções para localizar fundos\n","\n","def localizar_fundos(df, n_candles=2):\n","\n","  df_invertido = df.iloc[::-1]\n","\n","  cond_low_anteriores  = df['Low'] <= df['Low'].rolling(n_candles, closed='left').min()\n","  cond_low_posteriores = df_invertido['Low'] <= df_invertido['Low'].rolling(n_candles, closed='left').min()\n","\n","  return (cond_low_anteriores & cond_low_posteriores)"],"metadata":{"id":"MCAJtciFAptP","executionInfo":{"status":"ok","timestamp":1683718795162,"user_tz":180,"elapsed":299,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["o return vai trazer um booleando validando se as duas condições forem verdadeiras ele trará um \"TRUE\" ou se apenas uma das condições forem verdadeira, ele trará um \"FALSE\""],"metadata":{"id":"cpSDgfn6CSLT"}},{"cell_type":"code","source":["# Executando a função criada acima\n","\n","localizar_fundos(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b_kW4NOxCnbz","executionInfo":{"status":"ok","timestamp":1683718797429,"user_tz":180,"elapsed":287,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"9eae5aa5-5ca3-4016-9351-7500a11a7921"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date\n","2022-01-03    False\n","2022-01-04    False\n","2022-01-05     True\n","2022-01-06    False\n","2022-01-07    False\n","              ...  \n","2022-12-23    False\n","2022-12-26    False\n","2022-12-27     True\n","2022-12-28    False\n","2022-12-29    False\n","Name: Low, Length: 250, dtype: bool"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Criando funções para localizar topos\n","\n","def localizar_topos(df, n_candles=2):\n","\n","  df_invertido = df.iloc[::-1]\n","\n","  cond_high_anteriores  = df['High'] >= df['High'].rolling(n_candles, closed='left').min()\n","  cond_high_posteriores = df_invertido['High'] >= df_invertido['High'].rolling(n_candles, closed='left').min()\n","\n","  return (cond_high_anteriores & cond_high_posteriores)"],"metadata":{"id":"PA2j-weQC7JS","executionInfo":{"status":"ok","timestamp":1683718801295,"user_tz":180,"elapsed":912,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Executando a função criada acima\n","\n","localizar_topos(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hy10Dn5mDQyu","executionInfo":{"status":"ok","timestamp":1683718803808,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"30115618-675e-43a2-b065-55d5a8108e28"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date\n","2022-01-03    False\n","2022-01-04    False\n","2022-01-05    False\n","2022-01-06    False\n","2022-01-07     True\n","              ...  \n","2022-12-23     True\n","2022-12-26     True\n","2022-12-27    False\n","2022-12-28    False\n","2022-12-29    False\n","Name: High, Length: 250, dtype: bool"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Lógica de Programação\n","# Detectar os topos e fundos em cada linha do Data Frame e armazenar os dados\n","\n","n_candles = 2\n","\n","# Criando um dicionário para armazenar os dados de vertice, data e preço\n","dict_topos_fundos = {'vertice':[], 'data':[], 'preco':[]}\n","\n","# No for como não passamos o parâmetro ele irá percorrer todas as linhas do df\n","for i in range (len(df)):  \n","\n","  if localizar_fundos(df, n_candles).iloc[i]:\n","     dict_topos_fundos['vertice'].append('fundo')\n","     dict_topos_fundos['data'].append(df.index[i])\n","     dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","\n","  if localizar_topos(df, n_candles).iloc[i]:\n","     dict_topos_fundos['vertice'].append('topo')\n","     dict_topos_fundos['data'].append(df.index[i])\n","     dict_topos_fundos['preco'].append(df.High.iloc[i])"],"metadata":{"id":"UXyzCp8dDsEJ","executionInfo":{"status":"ok","timestamp":1683718807630,"user_tz":180,"elapsed":1784,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Transformando o Dicionário em um Data Frame\n","\n","df_topos_fundos = pd.DataFrame(dict_topos_fundos)\n","df_topos_fundos.index = df_topos_fundos.data\n","df_topos_fundos.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":395},"id":"Qff07efTPsVw","executionInfo":{"status":"ok","timestamp":1683718809791,"user_tz":180,"elapsed":5,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"e813826e-5f51-4f82-80df-ef90fff97fa1"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           vertice       data     preco\n","data                                   \n","2022-01-05   fundo 2022-01-05  100850.0\n","2022-01-07    topo 2022-01-07  102719.0\n","2022-01-14    topo 2022-01-14  107062.0\n","2022-01-20    topo 2022-01-20  109873.0\n","2022-01-21    topo 2022-01-21  109786.0\n","2022-01-24   fundo 2022-01-24  106624.0\n","2022-01-27    topo 2022-01-27  113057.0\n","2022-01-28    topo 2022-01-28  112969.0\n","2022-01-31   fundo 2022-01-31  111195.0\n","2022-02-01    topo 2022-02-01  113302.0"],"text/html":["\n","  <div id=\"df-a063e778-1db2-4300-bb38-4bdebfaac0aa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>vertice</th>\n","      <th>data</th>\n","      <th>preco</th>\n","    </tr>\n","    <tr>\n","      <th>data</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-01-05</th>\n","      <td>fundo</td>\n","      <td>2022-01-05</td>\n","      <td>100850.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-07</th>\n","      <td>topo</td>\n","      <td>2022-01-07</td>\n","      <td>102719.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-14</th>\n","      <td>topo</td>\n","      <td>2022-01-14</td>\n","      <td>107062.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-20</th>\n","      <td>topo</td>\n","      <td>2022-01-20</td>\n","      <td>109873.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-21</th>\n","      <td>topo</td>\n","      <td>2022-01-21</td>\n","      <td>109786.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-24</th>\n","      <td>fundo</td>\n","      <td>2022-01-24</td>\n","      <td>106624.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-27</th>\n","      <td>topo</td>\n","      <td>2022-01-27</td>\n","      <td>113057.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-28</th>\n","      <td>topo</td>\n","      <td>2022-01-28</td>\n","      <td>112969.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-31</th>\n","      <td>fundo</td>\n","      <td>2022-01-31</td>\n","      <td>111195.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-01</th>\n","      <td>topo</td>\n","      <td>2022-02-01</td>\n","      <td>113302.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a063e778-1db2-4300-bb38-4bdebfaac0aa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a063e778-1db2-4300-bb38-4bdebfaac0aa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a063e778-1db2-4300-bb38-4bdebfaac0aa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Juntando o Data Frame criado acima com o Data Frame de dados importado do Yahoo Finance com as cotações do IBOV\n","\n","df_final = pd.merge(df, df_topos_fundos, left_index=True, right_index=True, how='left')\n","df_final.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":395},"id":"3Gr-nD9CR2XF","executionInfo":{"status":"ok","timestamp":1683718813917,"user_tz":180,"elapsed":1298,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"812d21df-8aaf-467c-dc70-85a044bd4876"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Open      High       Low     Close  Adj Close    Volume  \\\n","Date                                                                      \n","2022-01-03  104823.0  106125.0  103413.0  103922.0   103922.0  11128500   \n","2022-01-04  103922.0  104276.0  103096.0  103514.0   103514.0  11491600   \n","2022-01-05  103514.0  103514.0  100850.0  101006.0   101006.0         0   \n","2022-01-06  101006.0  102235.0  101000.0  101561.0   101561.0  11749200   \n","2022-01-07  101561.0  102719.0  101104.0  102719.0   102719.0  11733200   \n","2022-01-10  102719.0  102719.0  101038.0  101945.0   101945.0  10264700   \n","2022-01-11  101946.0  103780.0  101918.0  103779.0   103779.0  12421500   \n","2022-01-12  103779.0  105869.0  103771.0  105686.0   105686.0  13026500   \n","2022-01-13  105686.0  106251.0  104974.0  105530.0   105530.0  11712300   \n","2022-01-14  105530.0  107062.0  105028.0  106928.0   106928.0  11457100   \n","\n","           vertice       data     preco  \n","Date                                     \n","2022-01-03     NaN        NaT       NaN  \n","2022-01-04     NaN        NaT       NaN  \n","2022-01-05   fundo 2022-01-05  100850.0  \n","2022-01-06     NaN        NaT       NaN  \n","2022-01-07    topo 2022-01-07  102719.0  \n","2022-01-10     NaN        NaT       NaN  \n","2022-01-11     NaN        NaT       NaN  \n","2022-01-12     NaN        NaT       NaN  \n","2022-01-13     NaN        NaT       NaN  \n","2022-01-14    topo 2022-01-14  107062.0  "],"text/html":["\n","  <div id=\"df-defaa614-4887-4e3e-ac27-64da34083883\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Adj Close</th>\n","      <th>Volume</th>\n","      <th>vertice</th>\n","      <th>data</th>\n","      <th>preco</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-01-03</th>\n","      <td>104823.0</td>\n","      <td>106125.0</td>\n","      <td>103413.0</td>\n","      <td>103922.0</td>\n","      <td>103922.0</td>\n","      <td>11128500</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-04</th>\n","      <td>103922.0</td>\n","      <td>104276.0</td>\n","      <td>103096.0</td>\n","      <td>103514.0</td>\n","      <td>103514.0</td>\n","      <td>11491600</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-05</th>\n","      <td>103514.0</td>\n","      <td>103514.0</td>\n","      <td>100850.0</td>\n","      <td>101006.0</td>\n","      <td>101006.0</td>\n","      <td>0</td>\n","      <td>fundo</td>\n","      <td>2022-01-05</td>\n","      <td>100850.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-06</th>\n","      <td>101006.0</td>\n","      <td>102235.0</td>\n","      <td>101000.0</td>\n","      <td>101561.0</td>\n","      <td>101561.0</td>\n","      <td>11749200</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-07</th>\n","      <td>101561.0</td>\n","      <td>102719.0</td>\n","      <td>101104.0</td>\n","      <td>102719.0</td>\n","      <td>102719.0</td>\n","      <td>11733200</td>\n","      <td>topo</td>\n","      <td>2022-01-07</td>\n","      <td>102719.0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-10</th>\n","      <td>102719.0</td>\n","      <td>102719.0</td>\n","      <td>101038.0</td>\n","      <td>101945.0</td>\n","      <td>101945.0</td>\n","      <td>10264700</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-11</th>\n","      <td>101946.0</td>\n","      <td>103780.0</td>\n","      <td>101918.0</td>\n","      <td>103779.0</td>\n","      <td>103779.0</td>\n","      <td>12421500</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-12</th>\n","      <td>103779.0</td>\n","      <td>105869.0</td>\n","      <td>103771.0</td>\n","      <td>105686.0</td>\n","      <td>105686.0</td>\n","      <td>13026500</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-13</th>\n","      <td>105686.0</td>\n","      <td>106251.0</td>\n","      <td>104974.0</td>\n","      <td>105530.0</td>\n","      <td>105530.0</td>\n","      <td>11712300</td>\n","      <td>NaN</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-14</th>\n","      <td>105530.0</td>\n","      <td>107062.0</td>\n","      <td>105028.0</td>\n","      <td>106928.0</td>\n","      <td>106928.0</td>\n","      <td>11457100</td>\n","      <td>topo</td>\n","      <td>2022-01-14</td>\n","      <td>107062.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-defaa614-4887-4e3e-ac27-64da34083883')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-defaa614-4887-4e3e-ac27-64da34083883 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-defaa614-4887-4e3e-ac27-64da34083883');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["\n","df_figure = df_final\n","\n","# Linhas para gerar os candles sticks\n","fig_topos_fundos = go.Figure(data=[go.Candlestick(name='', x=df_figure.index, open=df_figure.Open, high=df_figure.High,\n","                                            low=df_figure.Low, close=df_figure.Close, increasing_line_color='green', \n","                                            decreasing_line_color='red', showlegend=False)])\n","\n","# Linhas para gerar os topos e fundos\n","fig_topos_fundos.add_trace(go.Scatter(x=df_topos_fundos.data, y=df_topos_fundos.preco, mode=\"lines\", line_width=2, line_dash=\"solid\",\n","                                      line_color=\"black\", name=\"Topos / Fundos\", showlegend=True))\n","\n","# Linhas para excluir \"Sabados e Domingos\" uma vez que em nosso df vem todos os dias.\n","fig_topos_fundos.update_xaxes(rangebreaks=[dict(bounds=[\"sat\", \"mond\"])])\n","\n","# Linhas para \"Maquiar\" o gráfico, com cor, margem, título e etc.\n","fig_topos_fundos.update_layout(xaxis_rangeslider_visible=False, title_text='<b>Indicador topos e fundos', template='none', \n","                               margin=dict(l=75, r=75, t=75, b=75), paper_bgcolor=\"#f7f8fa\", width=1200, height=600)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"za2IV7QISvpq","executionInfo":{"status":"ok","timestamp":1683718817931,"user_tz":180,"elapsed":1487,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"11c6e407-c553-4f51-b8e4-e61bb15468d4"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"87d7b193-8117-4140-b5d0-10da32b6ca0f\" class=\"plotly-graph-div\" style=\"height:600px; width:1200px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"87d7b193-8117-4140-b5d0-10da32b6ca0f\")) {                    Plotly.newPlot(                        \"87d7b193-8117-4140-b5d0-10da32b6ca0f\",                        [{\"close\":[103922.0,103514.0,101006.0,101561.0,102719.0,101945.0,103779.0,105686.0,105530.0,106928.0,106692.0,106522.0,108013.0,109102.0,108942.0,107752.0,109845.0,111573.0,112315.0,111478.0,112388.0,113147.0,112161.0,111696.0,112245.0,111996.0,112234.0,112461.0,113359.0,113572.0,113807.0,114660.0,115181.0,113528.0,112768.0,111725.0,112892.0,112008.0,111592.0,113142.0,115174.0,115166.0,114474.0,111593.0,111203.0,113900.0,113663.0,111713.0,109928.0,108959.0,111112.0,113076.0,115311.0,116155.0,117272.0,117457.0,119053.0,119081.0,118738.0,120014.0,120260.0,119999.0,121570.0,121280.0,118885.0,118228.0,118862.0,118322.0,116953.0,116147.0,116782.0,116182.0,115687.0,115057.0,114344.0,111078.0,110685.0,108213.0,109349.0,109919.0,107876.0,106639.0,106528.0,108344.0,105304.0,105135.0,103250.0,103110.0,104397.0,105688.0,106924.0,108233.0,108789.0,106247.0,107005.0,108488.0,110346.0,110581.0,110580.0,111890.0,111942.0,111032.0,111351.0,111360.0,112393.0,111102.0,110186.0,110070.0,108368.0,107094.0,105481.0,102598.0,102063.0,102807.0,99825.0,99853.0,99685.0,99522.0,98080.0,98672.0,100764.0,100591.0,99622.0,98542.0,98954.0,98609.0,98295.0,98719.0,100730.0,100289.0,98212.0,98271.0,97881.0,96121.0,96551.0,96916.0,98245.0,98287.0,99033.0,98925.0,100270.0,99772.0,101438.0,102597.0,103165.0,102225.0,103362.0,103775.0,105892.0,106472.0,108402.0,108651.0,110236.0,109718.0,112764.0,113032.0,113512.0,113708.0,113813.0,111496.0,110501.0,112857.0,112898.0,113532.0,112299.0,112323.0,110431.0,109523.0,110405.0,110864.0,112203.0,109764.0,109916.0,112300.0,113407.0,110794.0,110547.0,109954.0,109280.0,111824.0,112517.0,111936.0,114070.0,111716.0,109114.0,108376.0,108451.0,107664.0,110037.0,116134.0,116230.0,117198.0,117561.0,116375.0,115941.0,114827.0,114300.0,112072.0,113624.0,115743.0,116274.0,117171.0,119929.0,116013.0,114626.0,112764.0,114641.0,114539.0,116037.0,116929.0,116896.0,118155.0,115342.0,116160.0,113580.0,109775.0,112253.0,113161.0,110243.0,109703.0,108880.0,109748.0,109037.0,108683.0,111831.0,108977.0,108782.0,110910.0,112486.0,110926.0,111924.0,109401.0,109533.0,109361.0,107245.0,107689.0,105264.0,103892.0,103803.0,103738.0,102825.0,104530.0,106979.0,107313.0,107317.0,109698.0,108738.0,108347.0,110237.0,110031.0],\"decreasing\":{\"line\":{\"color\":\"red\"}},\"high\":[106125.0,104276.0,103514.0,102235.0,102719.0,102719.0,103780.0,105869.0,106251.0,107062.0,106928.0,107013.0,108602.0,109873.0,109786.0,108948.0,110115.0,112695.0,113057.0,112969.0,112495.0,113302.0,113666.0,112502.0,112415.0,112517.0,112251.0,113163.0,113812.0,114899.0,114167.0,114819.0,115734.0,115214.0,114213.0,113405.0,113315.0,113721.0,112001.0,113142.0,115429.0,115948.0,115166.0,114529.0,112390.0,114051.0,113939.0,114627.0,112299.0,109925.0,111183.0,113088.0,115311.0,116360.0,117541.0,118270.0,119256.0,119729.0,119444.0,120900.0,120531.0,120880.0,121579.0,121570.0,121628.0,118885.0,119247.0,118868.0,118320.0,118615.0,117329.0,116781.0,116191.0,115687.0,115057.0,114343.0,111155.0,110685.0,110107.0,110702.0,111819.0,107884.0,107127.0,108382.0,108337.0,106268.0,105109.0,104286.0,105374.0,105708.0,107773.0,108685.0,109774.0,108096.0,107420.0,108795.0,110680.0,110635.0,111006.0,112102.0,112441.0,112690.0,111903.0,111931.0,112709.0,112392.0,111935.0,110435.0,110142.0,108510.0,107092.0,105478.0,103328.0,103952.0,102801.0,100481.0,101069.0,100374.0,100232.0,99313.0,101106.0,102237.0,101313.0,99619.0,99340.0,99353.0,98608.0,99141.0,101420.0,101577.0,100282.0,98737.0,98928.0,97879.0,96971.0,98291.0,98346.0,98366.0,99057.0,99724.0,100508.0,100753.0,101471.0,102686.0,103989.0,103317.0,103660.0,103878.0,106162.0,107176.0,108489.0,109331.0,110362.0,111310.0,112764.0,113214.0,113626.0,114146.0,114375.0,113807.0,111487.0,112965.0,113888.0,114156.0,114091.0,113222.0,112869.0,111364.0,110405.0,112264.0,112671.0,112203.0,110768.0,112540.0,114160.0,113400.0,111504.0,111100.0,109952.0,111976.0,112544.0,113294.0,114392.0,112457.0,111713.0,110161.0,108970.0,108449.0,110502.0,116134.0,118280.0,117514.0,118382.0,117960.0,116841.0,115928.0,115367.0,114712.0,114406.0,115795.0,116459.0,117367.0,120752.0,119924.0,116203.0,114626.0,116236.0,114712.0,116763.0,118261.0,117373.0,120039.0,118240.0,117072.0,116183.0,113579.0,113010.0,114322.0,113473.0,110242.0,111585.0,110235.0,110224.0,109285.0,112612.0,112025.0,109476.0,112187.0,112486.0,112479.0,113761.0,112150.0,110663.0,110247.0,109286.0,108566.0,107561.0,106689.0,104516.0,105483.0,104018.0,105107.0,107792.0,107991.0,108383.0,109994.0,109755.0,109353.0,110536.0,111178.0],\"increasing\":{\"line\":{\"color\":\"green\"}},\"low\":[103413.0,103096.0,100850.0,101000.0,101104.0,101038.0,101918.0,103771.0,104974.0,105028.0,106097.0,105786.0,106669.0,108015.0,108368.0,106624.0,107185.0,110204.0,111303.0,111407.0,111195.0,112135.0,111645.0,111225.0,110321.0,111490.0,110943.0,111710.0,112163.0,113128.0,113358.0,113882.0,114816.0,113389.0,112701.0,111608.0,111727.0,111748.0,109125.0,110673.0,113143.0,115010.0,113389.0,111140.0,110969.0,111207.0,111889.0,111332.0,109717.0,107781.0,108958.0,111070.0,112475.0,115208.0,116157.0,117036.0,117151.0,118548.0,118061.0,118740.0,119775.0,119999.0,120001.0,120754.0,118794.0,116791.0,117509.0,117487.0,116953.0,116054.0,116150.0,115624.0,115177.0,114277.0,113945.0,110591.0,109222.0,107978.0,108214.0,108905.0,107876.0,105218.0,106033.0,104933.0,103923.0,103984.0,102768.0,102386.0,103008.0,103579.0,105691.0,108199.0,108245.0,106038.0,105760.0,107351.0,108500.0,108399.0,109699.0,110388.0,111558.0,110655.0,110685.0,110822.0,111218.0,110935.0,110015.0,109394.0,108045.0,107068.0,104648.0,101700.0,101325.0,102046.0,98402.0,98409.0,99167.0,98050.0,97775.0,98031.0,98672.0,99956.0,99218.0,97758.0,97231.0,98264.0,96499.0,97423.0,98722.0,99958.0,97854.0,97253.0,97403.0,95431.0,95267.0,96553.0,96917.0,97277.0,97088.0,98321.0,98925.0,99365.0,99772.0,101045.0,102514.0,101764.0,101694.0,102822.0,103777.0,105518.0,106473.0,107842.0,108657.0,109604.0,109718.0,111067.0,112690.0,112483.0,113304.0,111146.0,109858.0,110503.0,112632.0,112768.0,111978.0,111689.0,110103.0,109523.0,108217.0,110409.0,110865.0,109348.0,108619.0,109922.0,112305.0,110522.0,110118.0,109524.0,108489.0,108508.0,111393.0,111380.0,111819.0,110732.0,109022.0,108120.0,107914.0,106244.0,107315.0,110048.0,115837.0,115906.0,117144.0,115924.0,115261.0,114297.0,112690.0,111631.0,112090.0,113627.0,115264.0,116276.0,116736.0,115793.0,114626.0,112577.0,112765.0,113336.0,112113.0,115547.0,114485.0,116904.0,115266.0,114688.0,113110.0,108516.0,109408.0,111930.0,109512.0,107245.0,108512.0,107957.0,107867.0,107902.0,108846.0,108552.0,108378.0,108784.0,110202.0,110548.0,109963.0,109270.0,109217.0,108612.0,106906.0,107089.0,103877.0,103409.0,101632.0,103014.0,102248.0,102770.0,104607.0,106066.0,106510.0,107552.0,108309.0,107418.0,108578.0,109560.0],\"name\":\"\",\"open\":[104823.0,103922.0,103514.0,101006.0,101561.0,102719.0,101946.0,103779.0,105686.0,105530.0,106927.0,106369.0,106670.0,108015.0,109097.0,108941.0,107935.0,110207.0,111303.0,112611.0,111910.0,112143.0,113228.0,111897.0,111696.0,112247.0,111995.0,112233.0,112462.0,113368.0,113643.0,113905.0,114830.0,115181.0,113534.0,112880.0,111727.0,112892.0,112001.0,111591.0,113143.0,115173.0,115166.0,114469.0,111594.0,111210.0,113900.0,113664.0,111716.0,109925.0,108958.0,111113.0,113076.0,115307.0,116157.0,117270.0,117460.0,119062.0,119082.0,118740.0,120013.0,120261.0,120001.0,121569.0,121279.0,118885.0,118226.0,118861.0,118320.0,116963.0,116150.0,116781.0,116182.0,115687.0,115057.0,114343.0,111077.0,110684.0,108214.0,109349.0,109922.0,107876.0,106640.0,106529.0,108337.0,105303.0,105109.0,103251.0,103110.0,104395.0,105691.0,108685.0,108246.0,107903.0,106249.0,108520.0,108500.0,110340.0,110085.0,110577.0,111890.0,111944.0,111036.0,111351.0,111363.0,112392.0,111102.0,110185.0,110067.0,108367.0,107091.0,105476.0,102598.0,102068.0,102800.0,99824.0,99854.0,99678.0,99523.0,98081.0,98673.0,100766.0,100592.0,99619.0,98542.0,98952.0,98608.0,98294.0,98722.0,100732.0,100282.0,98212.0,98258.0,97879.0,96119.0,96553.0,96920.0,98244.0,98286.0,99034.0,98926.0,100270.0,99773.0,101437.0,102597.0,103165.0,102225.0,103362.0,103777.0,105893.0,106473.0,108403.0,108658.0,110236.0,109718.0,112767.0,113034.0,113508.0,113708.0,113807.0,111487.0,110504.0,112856.0,112898.0,113533.0,112296.0,112323.0,110431.0,109524.0,110409.0,110868.0,112203.0,109771.0,109922.0,112307.0,113398.0,110794.0,110547.0,109951.0,109283.0,111824.0,112517.0,111942.0,112258.0,111713.0,109122.0,108377.0,108449.0,107664.0,110048.0,116704.0,116231.0,117200.0,117560.0,116377.0,115928.0,114819.0,114301.0,112107.0,113627.0,115744.0,116276.0,117170.0,119922.0,116016.0,114626.0,112766.0,114636.0,114533.0,116037.0,116927.0,116907.0,118148.0,115340.0,116153.0,113579.0,109775.0,112256.0,113166.0,110241.0,109706.0,108868.0,109750.0,109036.0,108846.0,111831.0,108977.0,108784.0,110910.0,112479.0,110926.0,111922.0,109403.0,110188.0,109068.0,107250.0,107518.0,105345.0,103536.0,103739.0,103737.0,102859.0,104740.0,106866.0,107436.0,107552.0,109699.0,108739.0,108578.0,110237.0],\"showlegend\":false,\"x\":[\"2022-01-03T00:00:00\",\"2022-01-04T00:00:00\",\"2022-01-05T00:00:00\",\"2022-01-06T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-10T00:00:00\",\"2022-01-11T00:00:00\",\"2022-01-12T00:00:00\",\"2022-01-13T00:00:00\",\"2022-01-14T00:00:00\",\"2022-01-17T00:00:00\",\"2022-01-18T00:00:00\",\"2022-01-19T00:00:00\",\"2022-01-20T00:00:00\",\"2022-01-21T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-25T00:00:00\",\"2022-01-26T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-02T00:00:00\",\"2022-02-03T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-08T00:00:00\",\"2022-02-09T00:00:00\",\"2022-02-10T00:00:00\",\"2022-02-11T00:00:00\",\"2022-02-14T00:00:00\",\"2022-02-15T00:00:00\",\"2022-02-16T00:00:00\",\"2022-02-17T00:00:00\",\"2022-02-18T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-22T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-02-25T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-08T00:00:00\",\"2022-08-09T00:00:00\",\"2022-08-10T00:00:00\",\"2022-08-11T00:00:00\",\"2022-08-12T00:00:00\",\"2022-08-15T00:00:00\",\"2022-08-16T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-18T00:00:00\",\"2022-08-19T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-23T00:00:00\",\"2022-08-24T00:00:00\",\"2022-08-25T00:00:00\",\"2022-08-26T00:00:00\",\"2022-08-29T00:00:00\",\"2022-08-30T00:00:00\",\"2022-08-31T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-05T00:00:00\",\"2022-09-06T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-09T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-14T00:00:00\",\"2022-09-15T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-19T00:00:00\",\"2022-09-20T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-22T00:00:00\",\"2022-09-23T00:00:00\",\"2022-09-26T00:00:00\",\"2022-09-27T00:00:00\",\"2022-09-28T00:00:00\",\"2022-09-29T00:00:00\",\"2022-09-30T00:00:00\",\"2022-10-03T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-05T00:00:00\",\"2022-10-06T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-10T00:00:00\",\"2022-10-11T00:00:00\",\"2022-10-13T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-17T00:00:00\",\"2022-10-18T00:00:00\",\"2022-10-19T00:00:00\",\"2022-10-20T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-25T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-28T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-03T00:00:00\",\"2022-11-04T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-08T00:00:00\",\"2022-11-09T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-11T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-21T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-23T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-29T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-02T00:00:00\",\"2022-12-05T00:00:00\",\"2022-12-06T00:00:00\",\"2022-12-07T00:00:00\",\"2022-12-08T00:00:00\",\"2022-12-09T00:00:00\",\"2022-12-12T00:00:00\",\"2022-12-13T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-16T00:00:00\",\"2022-12-19T00:00:00\",\"2022-12-20T00:00:00\",\"2022-12-21T00:00:00\",\"2022-12-22T00:00:00\",\"2022-12-23T00:00:00\",\"2022-12-26T00:00:00\",\"2022-12-27T00:00:00\",\"2022-12-28T00:00:00\",\"2022-12-29T00:00:00\"],\"type\":\"candlestick\"},{\"line\":{\"color\":\"black\",\"dash\":\"solid\",\"width\":2},\"mode\":\"lines\",\"name\":\"Topos / Fundos\",\"showlegend\":true,\"x\":[\"2022-01-05T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-14T00:00:00\",\"2022-01-20T00:00:00\",\"2022-01-21T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-02T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-11T00:00:00\",\"2022-02-16T00:00:00\",\"2022-02-17T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-29T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-30T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-18T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-25T00:00:00\",\"2022-08-26T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-05T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-22T00:00:00\",\"2022-09-29T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-06T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-04T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-02T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-23T00:00:00\",\"2022-12-26T00:00:00\",\"2022-12-27T00:00:00\"],\"y\":[100850.0,102719.0,107062.0,109873.0,109786.0,106624.0,113057.0,112969.0,111195.0,113302.0,113666.0,110321.0,112517.0,114899.0,115734.0,115214.0,111608.0,113721.0,109125.0,115429.0,115948.0,110969.0,114051.0,113939.0,114627.0,107781.0,119729.0,120900.0,121579.0,121570.0,121628.0,116791.0,119247.0,118615.0,107978.0,110702.0,111819.0,108382.0,108337.0,102386.0,108685.0,109774.0,105760.0,110680.0,112441.0,112690.0,112709.0,112392.0,103952.0,98402.0,101069.0,97775.0,102237.0,101313.0,99353.0,96499.0,101420.0,101577.0,98928.0,95267.0,103989.0,101694.0,114146.0,114375.0,109858.0,114156.0,114091.0,108217.0,112264.0,112671.0,108619.0,114160.0,113400.0,108489.0,113294.0,114392.0,106244.0,118280.0,118382.0,117960.0,111631.0,120752.0,119924.0,112577.0,116236.0,112113.0,118261.0,120039.0,118240.0,108516.0,114322.0,113473.0,107245.0,111585.0,107867.0,112612.0,112025.0,108378.0,112486.0,112479.0,113761.0,101632.0,105483.0,109994.0,109755.0,107418.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"scatter\":[{\"type\":\"scatter\"}]}},\"xaxis\":{\"rangebreaks\":[{\"bounds\":[\"sat\",\"mond\"]}],\"rangeslider\":{\"visible\":false}},\"title\":{\"text\":\"<b>Indicador topos e fundos\"},\"margin\":{\"l\":75,\"r\":75,\"t\":75,\"b\":75},\"paper_bgcolor\":\"#f7f8fa\",\"width\":1200,\"height\":600},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('87d7b193-8117-4140-b5d0-10da32b6ca0f');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["O problemas desse gráfico é que ele possui marcações de seguidas de topos e fundos."],"metadata":{"id":"Wn4kJ18oWqup"}},{"cell_type":"code","source":["# Criando condicionais para que ele dectetar se um fundo já existe, assim que ele detecta o fundo.\n","# Se ele decta ele substitui por esse novo que ele detectou.\n","\n","n_candles = 2\n","\n","# Criamos uma lista nova para adicionar os dados de últimos e guiar a estrutura de repetição.\n","ls_vertices = ['neutro'] \n","\n","dict_topos_fundos = {'vertice': [], 'data': [], 'preco': []}\n","\n","for i in range(len(df)):\n","\n","  if localizar_fundos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'fundo':\n","      dict_topos_fundos['vertice'].append('fundo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","      ls_vertices.append('fundo')\n","\n","    else:\n","      if df.Low.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.Low.iloc[i]\n","\n","  if localizar_topos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'topo':\n","      dict_topos_fundos['vertice'].append('topo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","      ls_vertices.append('topo')\n","\n","    else:\n","      if df.High.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.High.iloc[i]\n"],"metadata":{"id":"XsF_gPoDb0Q5","executionInfo":{"status":"ok","timestamp":1683718824576,"user_tz":180,"elapsed":2103,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# Repetimos os mesmos passos que anteriormente\n","\n","# Transformamos o Dicionario em DataFrame\n","df_topos_fundos = pd.DataFrame(dict_topos_fundos)\n","df_topos_fundos.index = df_topos_fundos.data\n","\n","# Efetuamos o merge dos dados\n","df_final = pd.merge(df, df_topos_fundos, left_index=True, right_index=True, how='left')\n","df_final.head(20)\n","\n","df_figure = df_final\n","\n","# Linhas para gerar os candles sticks\n","fig_topos_fundos = go.Figure(data=[go.Candlestick(name='', x=df_figure.index, open=df_figure.Open, high=df_figure.High,\n","                                            low=df_figure.Low, close=df_figure.Close, increasing_line_color='green', \n","                                            decreasing_line_color='red', showlegend=False)])\n","\n","# Linhas para gerar os topos e fundos\n","fig_topos_fundos.add_trace(go.Scatter(x=df_topos_fundos.data, y=df_topos_fundos.preco, mode=\"lines\", line_width=2, line_dash=\"solid\",\n","                                      line_color=\"black\", name=\"Topos / Fundos\", showlegend=True))\n","\n","# Linhas para excluir \"Sabados e Domingos\" uma vez que em nosso df vem todos os dias.\n","fig_topos_fundos.update_xaxes(rangebreaks=[dict(bounds=[\"sat\", \"mond\"])])\n","\n","# Linhas para \"Maquiar\" o gráfico, com cor, margem, título e etc.\n","fig_topos_fundos.update_layout(xaxis_rangeslider_visible=False, title_text='<b>Indicador topos e fundos', template='none', \n","                               margin=dict(l=75, r=75, t=75, b=75), paper_bgcolor=\"#f7f8fa\", width=1200, height=600)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"My_o35lZkHG1","executionInfo":{"status":"ok","timestamp":1683718827125,"user_tz":180,"elapsed":310,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"43dbeb84-1eb1-4926-e2e0-4d8c19266d89"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"b8809c3a-972f-4d21-8059-f106f676f3ea\" class=\"plotly-graph-div\" style=\"height:600px; width:1200px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b8809c3a-972f-4d21-8059-f106f676f3ea\")) {                    Plotly.newPlot(                        \"b8809c3a-972f-4d21-8059-f106f676f3ea\",                        [{\"close\":[103922.0,103514.0,101006.0,101561.0,102719.0,101945.0,103779.0,105686.0,105530.0,106928.0,106692.0,106522.0,108013.0,109102.0,108942.0,107752.0,109845.0,111573.0,112315.0,111478.0,112388.0,113147.0,112161.0,111696.0,112245.0,111996.0,112234.0,112461.0,113359.0,113572.0,113807.0,114660.0,115181.0,113528.0,112768.0,111725.0,112892.0,112008.0,111592.0,113142.0,115174.0,115166.0,114474.0,111593.0,111203.0,113900.0,113663.0,111713.0,109928.0,108959.0,111112.0,113076.0,115311.0,116155.0,117272.0,117457.0,119053.0,119081.0,118738.0,120014.0,120260.0,119999.0,121570.0,121280.0,118885.0,118228.0,118862.0,118322.0,116953.0,116147.0,116782.0,116182.0,115687.0,115057.0,114344.0,111078.0,110685.0,108213.0,109349.0,109919.0,107876.0,106639.0,106528.0,108344.0,105304.0,105135.0,103250.0,103110.0,104397.0,105688.0,106924.0,108233.0,108789.0,106247.0,107005.0,108488.0,110346.0,110581.0,110580.0,111890.0,111942.0,111032.0,111351.0,111360.0,112393.0,111102.0,110186.0,110070.0,108368.0,107094.0,105481.0,102598.0,102063.0,102807.0,99825.0,99853.0,99685.0,99522.0,98080.0,98672.0,100764.0,100591.0,99622.0,98542.0,98954.0,98609.0,98295.0,98719.0,100730.0,100289.0,98212.0,98271.0,97881.0,96121.0,96551.0,96916.0,98245.0,98287.0,99033.0,98925.0,100270.0,99772.0,101438.0,102597.0,103165.0,102225.0,103362.0,103775.0,105892.0,106472.0,108402.0,108651.0,110236.0,109718.0,112764.0,113032.0,113512.0,113708.0,113813.0,111496.0,110501.0,112857.0,112898.0,113532.0,112299.0,112323.0,110431.0,109523.0,110405.0,110864.0,112203.0,109764.0,109916.0,112300.0,113407.0,110794.0,110547.0,109954.0,109280.0,111824.0,112517.0,111936.0,114070.0,111716.0,109114.0,108376.0,108451.0,107664.0,110037.0,116134.0,116230.0,117198.0,117561.0,116375.0,115941.0,114827.0,114300.0,112072.0,113624.0,115743.0,116274.0,117171.0,119929.0,116013.0,114626.0,112764.0,114641.0,114539.0,116037.0,116929.0,116896.0,118155.0,115342.0,116160.0,113580.0,109775.0,112253.0,113161.0,110243.0,109703.0,108880.0,109748.0,109037.0,108683.0,111831.0,108977.0,108782.0,110910.0,112486.0,110926.0,111924.0,109401.0,109533.0,109361.0,107245.0,107689.0,105264.0,103892.0,103803.0,103738.0,102825.0,104530.0,106979.0,107313.0,107317.0,109698.0,108738.0,108347.0,110237.0,110031.0],\"decreasing\":{\"line\":{\"color\":\"red\"}},\"high\":[106125.0,104276.0,103514.0,102235.0,102719.0,102719.0,103780.0,105869.0,106251.0,107062.0,106928.0,107013.0,108602.0,109873.0,109786.0,108948.0,110115.0,112695.0,113057.0,112969.0,112495.0,113302.0,113666.0,112502.0,112415.0,112517.0,112251.0,113163.0,113812.0,114899.0,114167.0,114819.0,115734.0,115214.0,114213.0,113405.0,113315.0,113721.0,112001.0,113142.0,115429.0,115948.0,115166.0,114529.0,112390.0,114051.0,113939.0,114627.0,112299.0,109925.0,111183.0,113088.0,115311.0,116360.0,117541.0,118270.0,119256.0,119729.0,119444.0,120900.0,120531.0,120880.0,121579.0,121570.0,121628.0,118885.0,119247.0,118868.0,118320.0,118615.0,117329.0,116781.0,116191.0,115687.0,115057.0,114343.0,111155.0,110685.0,110107.0,110702.0,111819.0,107884.0,107127.0,108382.0,108337.0,106268.0,105109.0,104286.0,105374.0,105708.0,107773.0,108685.0,109774.0,108096.0,107420.0,108795.0,110680.0,110635.0,111006.0,112102.0,112441.0,112690.0,111903.0,111931.0,112709.0,112392.0,111935.0,110435.0,110142.0,108510.0,107092.0,105478.0,103328.0,103952.0,102801.0,100481.0,101069.0,100374.0,100232.0,99313.0,101106.0,102237.0,101313.0,99619.0,99340.0,99353.0,98608.0,99141.0,101420.0,101577.0,100282.0,98737.0,98928.0,97879.0,96971.0,98291.0,98346.0,98366.0,99057.0,99724.0,100508.0,100753.0,101471.0,102686.0,103989.0,103317.0,103660.0,103878.0,106162.0,107176.0,108489.0,109331.0,110362.0,111310.0,112764.0,113214.0,113626.0,114146.0,114375.0,113807.0,111487.0,112965.0,113888.0,114156.0,114091.0,113222.0,112869.0,111364.0,110405.0,112264.0,112671.0,112203.0,110768.0,112540.0,114160.0,113400.0,111504.0,111100.0,109952.0,111976.0,112544.0,113294.0,114392.0,112457.0,111713.0,110161.0,108970.0,108449.0,110502.0,116134.0,118280.0,117514.0,118382.0,117960.0,116841.0,115928.0,115367.0,114712.0,114406.0,115795.0,116459.0,117367.0,120752.0,119924.0,116203.0,114626.0,116236.0,114712.0,116763.0,118261.0,117373.0,120039.0,118240.0,117072.0,116183.0,113579.0,113010.0,114322.0,113473.0,110242.0,111585.0,110235.0,110224.0,109285.0,112612.0,112025.0,109476.0,112187.0,112486.0,112479.0,113761.0,112150.0,110663.0,110247.0,109286.0,108566.0,107561.0,106689.0,104516.0,105483.0,104018.0,105107.0,107792.0,107991.0,108383.0,109994.0,109755.0,109353.0,110536.0,111178.0],\"increasing\":{\"line\":{\"color\":\"green\"}},\"low\":[103413.0,103096.0,100850.0,101000.0,101104.0,101038.0,101918.0,103771.0,104974.0,105028.0,106097.0,105786.0,106669.0,108015.0,108368.0,106624.0,107185.0,110204.0,111303.0,111407.0,111195.0,112135.0,111645.0,111225.0,110321.0,111490.0,110943.0,111710.0,112163.0,113128.0,113358.0,113882.0,114816.0,113389.0,112701.0,111608.0,111727.0,111748.0,109125.0,110673.0,113143.0,115010.0,113389.0,111140.0,110969.0,111207.0,111889.0,111332.0,109717.0,107781.0,108958.0,111070.0,112475.0,115208.0,116157.0,117036.0,117151.0,118548.0,118061.0,118740.0,119775.0,119999.0,120001.0,120754.0,118794.0,116791.0,117509.0,117487.0,116953.0,116054.0,116150.0,115624.0,115177.0,114277.0,113945.0,110591.0,109222.0,107978.0,108214.0,108905.0,107876.0,105218.0,106033.0,104933.0,103923.0,103984.0,102768.0,102386.0,103008.0,103579.0,105691.0,108199.0,108245.0,106038.0,105760.0,107351.0,108500.0,108399.0,109699.0,110388.0,111558.0,110655.0,110685.0,110822.0,111218.0,110935.0,110015.0,109394.0,108045.0,107068.0,104648.0,101700.0,101325.0,102046.0,98402.0,98409.0,99167.0,98050.0,97775.0,98031.0,98672.0,99956.0,99218.0,97758.0,97231.0,98264.0,96499.0,97423.0,98722.0,99958.0,97854.0,97253.0,97403.0,95431.0,95267.0,96553.0,96917.0,97277.0,97088.0,98321.0,98925.0,99365.0,99772.0,101045.0,102514.0,101764.0,101694.0,102822.0,103777.0,105518.0,106473.0,107842.0,108657.0,109604.0,109718.0,111067.0,112690.0,112483.0,113304.0,111146.0,109858.0,110503.0,112632.0,112768.0,111978.0,111689.0,110103.0,109523.0,108217.0,110409.0,110865.0,109348.0,108619.0,109922.0,112305.0,110522.0,110118.0,109524.0,108489.0,108508.0,111393.0,111380.0,111819.0,110732.0,109022.0,108120.0,107914.0,106244.0,107315.0,110048.0,115837.0,115906.0,117144.0,115924.0,115261.0,114297.0,112690.0,111631.0,112090.0,113627.0,115264.0,116276.0,116736.0,115793.0,114626.0,112577.0,112765.0,113336.0,112113.0,115547.0,114485.0,116904.0,115266.0,114688.0,113110.0,108516.0,109408.0,111930.0,109512.0,107245.0,108512.0,107957.0,107867.0,107902.0,108846.0,108552.0,108378.0,108784.0,110202.0,110548.0,109963.0,109270.0,109217.0,108612.0,106906.0,107089.0,103877.0,103409.0,101632.0,103014.0,102248.0,102770.0,104607.0,106066.0,106510.0,107552.0,108309.0,107418.0,108578.0,109560.0],\"name\":\"\",\"open\":[104823.0,103922.0,103514.0,101006.0,101561.0,102719.0,101946.0,103779.0,105686.0,105530.0,106927.0,106369.0,106670.0,108015.0,109097.0,108941.0,107935.0,110207.0,111303.0,112611.0,111910.0,112143.0,113228.0,111897.0,111696.0,112247.0,111995.0,112233.0,112462.0,113368.0,113643.0,113905.0,114830.0,115181.0,113534.0,112880.0,111727.0,112892.0,112001.0,111591.0,113143.0,115173.0,115166.0,114469.0,111594.0,111210.0,113900.0,113664.0,111716.0,109925.0,108958.0,111113.0,113076.0,115307.0,116157.0,117270.0,117460.0,119062.0,119082.0,118740.0,120013.0,120261.0,120001.0,121569.0,121279.0,118885.0,118226.0,118861.0,118320.0,116963.0,116150.0,116781.0,116182.0,115687.0,115057.0,114343.0,111077.0,110684.0,108214.0,109349.0,109922.0,107876.0,106640.0,106529.0,108337.0,105303.0,105109.0,103251.0,103110.0,104395.0,105691.0,108685.0,108246.0,107903.0,106249.0,108520.0,108500.0,110340.0,110085.0,110577.0,111890.0,111944.0,111036.0,111351.0,111363.0,112392.0,111102.0,110185.0,110067.0,108367.0,107091.0,105476.0,102598.0,102068.0,102800.0,99824.0,99854.0,99678.0,99523.0,98081.0,98673.0,100766.0,100592.0,99619.0,98542.0,98952.0,98608.0,98294.0,98722.0,100732.0,100282.0,98212.0,98258.0,97879.0,96119.0,96553.0,96920.0,98244.0,98286.0,99034.0,98926.0,100270.0,99773.0,101437.0,102597.0,103165.0,102225.0,103362.0,103777.0,105893.0,106473.0,108403.0,108658.0,110236.0,109718.0,112767.0,113034.0,113508.0,113708.0,113807.0,111487.0,110504.0,112856.0,112898.0,113533.0,112296.0,112323.0,110431.0,109524.0,110409.0,110868.0,112203.0,109771.0,109922.0,112307.0,113398.0,110794.0,110547.0,109951.0,109283.0,111824.0,112517.0,111942.0,112258.0,111713.0,109122.0,108377.0,108449.0,107664.0,110048.0,116704.0,116231.0,117200.0,117560.0,116377.0,115928.0,114819.0,114301.0,112107.0,113627.0,115744.0,116276.0,117170.0,119922.0,116016.0,114626.0,112766.0,114636.0,114533.0,116037.0,116927.0,116907.0,118148.0,115340.0,116153.0,113579.0,109775.0,112256.0,113166.0,110241.0,109706.0,108868.0,109750.0,109036.0,108846.0,111831.0,108977.0,108784.0,110910.0,112479.0,110926.0,111922.0,109403.0,110188.0,109068.0,107250.0,107518.0,105345.0,103536.0,103739.0,103737.0,102859.0,104740.0,106866.0,107436.0,107552.0,109699.0,108739.0,108578.0,110237.0],\"showlegend\":false,\"x\":[\"2022-01-03T00:00:00\",\"2022-01-04T00:00:00\",\"2022-01-05T00:00:00\",\"2022-01-06T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-10T00:00:00\",\"2022-01-11T00:00:00\",\"2022-01-12T00:00:00\",\"2022-01-13T00:00:00\",\"2022-01-14T00:00:00\",\"2022-01-17T00:00:00\",\"2022-01-18T00:00:00\",\"2022-01-19T00:00:00\",\"2022-01-20T00:00:00\",\"2022-01-21T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-25T00:00:00\",\"2022-01-26T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-02T00:00:00\",\"2022-02-03T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-08T00:00:00\",\"2022-02-09T00:00:00\",\"2022-02-10T00:00:00\",\"2022-02-11T00:00:00\",\"2022-02-14T00:00:00\",\"2022-02-15T00:00:00\",\"2022-02-16T00:00:00\",\"2022-02-17T00:00:00\",\"2022-02-18T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-22T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-02-25T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-08T00:00:00\",\"2022-08-09T00:00:00\",\"2022-08-10T00:00:00\",\"2022-08-11T00:00:00\",\"2022-08-12T00:00:00\",\"2022-08-15T00:00:00\",\"2022-08-16T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-18T00:00:00\",\"2022-08-19T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-23T00:00:00\",\"2022-08-24T00:00:00\",\"2022-08-25T00:00:00\",\"2022-08-26T00:00:00\",\"2022-08-29T00:00:00\",\"2022-08-30T00:00:00\",\"2022-08-31T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-05T00:00:00\",\"2022-09-06T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-09T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-14T00:00:00\",\"2022-09-15T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-19T00:00:00\",\"2022-09-20T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-22T00:00:00\",\"2022-09-23T00:00:00\",\"2022-09-26T00:00:00\",\"2022-09-27T00:00:00\",\"2022-09-28T00:00:00\",\"2022-09-29T00:00:00\",\"2022-09-30T00:00:00\",\"2022-10-03T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-05T00:00:00\",\"2022-10-06T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-10T00:00:00\",\"2022-10-11T00:00:00\",\"2022-10-13T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-17T00:00:00\",\"2022-10-18T00:00:00\",\"2022-10-19T00:00:00\",\"2022-10-20T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-25T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-28T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-03T00:00:00\",\"2022-11-04T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-08T00:00:00\",\"2022-11-09T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-11T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-21T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-23T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-29T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-02T00:00:00\",\"2022-12-05T00:00:00\",\"2022-12-06T00:00:00\",\"2022-12-07T00:00:00\",\"2022-12-08T00:00:00\",\"2022-12-09T00:00:00\",\"2022-12-12T00:00:00\",\"2022-12-13T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-16T00:00:00\",\"2022-12-19T00:00:00\",\"2022-12-20T00:00:00\",\"2022-12-21T00:00:00\",\"2022-12-22T00:00:00\",\"2022-12-23T00:00:00\",\"2022-12-26T00:00:00\",\"2022-12-27T00:00:00\",\"2022-12-28T00:00:00\",\"2022-12-29T00:00:00\"],\"type\":\"candlestick\"},{\"line\":{\"color\":\"black\",\"dash\":\"solid\",\"width\":2},\"mode\":\"lines\",\"name\":\"Topos / Fundos\",\"showlegend\":true,\"x\":[\"2022-01-05T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-25T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-26T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-19T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-23T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-25T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-29T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-27T00:00:00\"],\"y\":[100850.0,101104.0,106624.0,111303.0,111195.0,112135.0,110321.0,111490.0,111608.0,111748.0,109125.0,113143.0,110969.0,111207.0,107781.0,118548.0,116791.0,117509.0,107978.0,108337.0,102386.0,108199.0,105760.0,103952.0,98402.0,99167.0,97775.0,99353.0,96499.0,98722.0,95267.0,102514.0,101694.0,112483.0,109858.0,112768.0,108217.0,110409.0,108619.0,112305.0,108489.0,111380.0,106244.0,115837.0,111631.0,116736.0,112577.0,112765.0,112113.0,115547.0,108516.0,111930.0,107245.0,108512.0,107867.0,108846.0,108378.0,110202.0,101632.0,103014.0,107418.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"scatter\":[{\"type\":\"scatter\"}]}},\"xaxis\":{\"rangebreaks\":[{\"bounds\":[\"sat\",\"mond\"]}],\"rangeslider\":{\"visible\":false}},\"title\":{\"text\":\"<b>Indicador topos e fundos\"},\"margin\":{\"l\":75,\"r\":75,\"t\":75,\"b\":75},\"paper_bgcolor\":\"#f7f8fa\",\"width\":1200,\"height\":600},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('b8809c3a-972f-4d21-8059-f106f676f3ea');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Teoria de Dow"],"metadata":{"id":"GFi0RrUPmMqM"}},{"cell_type":"markdown","source":["A teoria se baseia na ideia de que o mercado se move em tendências primárias, secundárias e terciárias e que a análise de padrões de preços e volumes pode ajudar a identificar essas tendências e tomar decisões de negociação melhores. \n","\n","A Teoria de Dow está totalmente focada na variação dos preços e nada mais. A ideia de Charles Dow era encontrar uma maneira eficiente de acompanhar o sobe e desce das cotações para interpretar os movimentos das tendências do mercado. "],"metadata":{"id":"agitO6dFHXfH"}},{"cell_type":"code","source":["# Visualização de Dados Fractais - Charles Dow\n","df_1w = yf.download('^BVSP', start='2022-01-01', end='2023-01-01', interval='1wk')\n","df_1d = yf.download('^BVSP', start='2022-01-01', end='2023-01-01', interval='1d')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vLQrUouMmPfh","executionInfo":{"status":"ok","timestamp":1683718837458,"user_tz":180,"elapsed":1666,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"cf5d30fc-fc95-4d92-b428-ec41647e48f5"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["\n","df = df_1w.copy()\n","\n","n_candle = 10\n","ls_vertices = ['neutro']\n","\n","dict_topos_fundos = {'vertice': [], 'data': [], 'preco': []}\n","\n","for i in range(len(df)):\n","\n","  if localizar_fundos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'fundo':\n","      dict_topos_fundos['vertice'].append('fundo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","      ls_vertices.append('fundo')\n","\n","    else:\n","      if df.Low.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.Low.iloc[i]\n","\n","  if localizar_topos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'topo':\n","      dict_topos_fundos['vertice'].append('topo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.High.iloc[i])\n","      ls_vertices.append('topo')\n","\n","    else:\n","      if df.High.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.High.iloc[i]\n","\n","  # Transformamos o Dicionario em DataFrame\n","  df_topos_fundos = pd.DataFrame(dict_topos_fundos)\n","  df_topos_fundos.index = df_topos_fundos.data\n","\n","  # Efetuamos o merge dos dados\n","  df_final = pd.merge(df, df_topos_fundos, left_index=True, right_index=True, how='left')\n","  df_final.head(20)\n","\n","  df_figure = df_final\n","\n","  # Linhas para gerar os candles sticks\n","  fig_topos_fundos = go.Figure(data=[go.Candlestick(name='', x=df_figure.index, open=df_figure.Open, high=df_figure.High,\n","                                              low=df_figure.Low, close=df_figure.Close, increasing_line_color='green', \n","                                              decreasing_line_color='red', showlegend=False)])\n","\n","  # Linhas para gerar os topos e fundos\n","  fig_topos_fundos.add_trace(go.Scatter(x=df_topos_fundos.data, y=df_topos_fundos.preco, mode=\"lines\", line_width=2, line_dash=\"solid\",\n","                                        line_color=\"black\", name=\"Topos / Fundos\", showlegend=True))\n","\n","  # Linhas para excluir \"Sabados e Domingos\" uma vez que em nosso df vem todos os dias.\n","  fig_topos_fundos.update_xaxes(rangebreaks=[dict(bounds=[\"sat\", \"mond\"])])\n","\n","  # Linhas para \"Maquiar\" o gráfico, com cor, margem, título e etc.\n","  fig_semanal = fig_topos_fundos.update_layout(xaxis_rangeslider_visible=False, title_text='<b>Indicador topos e fundos', template='none', \n","                                margin=dict(l=75, r=75, t=75, b=75), paper_bgcolor=\"#f7f8fa\", width=1200, height=600)\n"],"metadata":{"id":"COOSt4XJnj8b","executionInfo":{"status":"ok","timestamp":1683718841753,"user_tz":180,"elapsed":1898,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df = df_1d.copy()\n","\n","n_candle = 10\n","ls_vertices = ['neutro']\n","\n","dict_topos_fundos = {'vertice': [], 'data': [], 'preco': []}\n","\n","for i in range(len(df)):\n","\n","  if localizar_fundos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'fundo':\n","      dict_topos_fundos['vertice'].append('fundo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","      ls_vertices.append('fundo')\n","\n","    else:\n","      if df.Low.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.Low.iloc[i]\n","\n","  if localizar_topos(df, n_candles).iloc[i]:\n","    if ls_vertices[-1] != 'topo':\n","      dict_topos_fundos['vertice'].append('topo')\n","      dict_topos_fundos['data'].append(df.index[i])\n","      dict_topos_fundos['preco'].append(df.High.iloc[i])\n","      ls_vertices.append('topo')\n","\n","    else:\n","      if df.High.iloc[i] < dict_topos_fundos['preco'][-1]:\n","         dict_topos_fundos['data'][-1] = df.index[i]\n","         dict_topos_fundos['preco'][-1] = df.High.iloc[i]\n","\n","  # Transformamos o Dicionario em DataFrame\n","  df_topos_fundos = pd.DataFrame(dict_topos_fundos)\n","  df_topos_fundos.index = df_topos_fundos.data\n","\n","  # Efetuamos o merge dos dados\n","  df_final = pd.merge(df, df_topos_fundos, left_index=True, right_index=True, how='left')\n","  df_final.head(20)\n","\n","  df_figure = df_final\n","\n","  # Linhas para gerar os candles sticks\n","  fig_topos_fundos = go.Figure(data=[go.Candlestick(name='', x=df_figure.index, open=df_figure.Open, high=df_figure.High,\n","                                              low=df_figure.Low, close=df_figure.Close, increasing_line_color='green', \n","                                              decreasing_line_color='red', showlegend=False)])\n","\n","  # Linhas para gerar os topos e fundos\n","  fig_topos_fundos.add_trace(go.Scatter(x=df_topos_fundos.data, y=df_topos_fundos.preco, mode=\"lines\", line_width=2, line_dash=\"solid\",\n","                                        line_color=\"black\", name=\"Topos / Fundos\", showlegend=True))\n","\n","  # Linhas para excluir \"Sabados e Domingos\" uma vez que em nosso df vem todos os dias.\n","  fig_topos_fundos.update_xaxes(rangebreaks=[dict(bounds=[\"sat\", \"mond\"])])\n","\n","  # Linhas para \"Maquiar\" o gráfico, com cor, margem, título e etc.\n","  fig_diario = fig_topos_fundos.update_layout(xaxis_rangeslider_visible=False, title_text='<b>Indicador topos e fundos', template='none', \n","                                margin=dict(l=75, r=75, t=75, b=75), paper_bgcolor=\"#f7f8fa\", width=1200, height=600)"],"metadata":{"id":"eZFoiPZ-oqu5","executionInfo":{"status":"ok","timestamp":1683718852439,"user_tz":180,"elapsed":6665,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["fig_semanal"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"A3vbkhiTo242","executionInfo":{"status":"ok","timestamp":1683718858763,"user_tz":180,"elapsed":1551,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"4d35ad52-0ed7-459e-db81-1431ca0254a7"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"81b7a5ab-7e42-4642-a1b7-2e9757919fb1\" class=\"plotly-graph-div\" style=\"height:600px; width:1200px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"81b7a5ab-7e42-4642-a1b7-2e9757919fb1\")) {                    Plotly.newPlot(                        \"81b7a5ab-7e42-4642-a1b7-2e9757919fb1\",                        [{\"close\":[102719.0,106928.0,108942.0,111478.0,112245.0,113572.0,112768.0,113142.0,114474.0,111713.0,115311.0,119081.0,121570.0,118322.0,116182.0,111078.0,107876.0,105135.0,106924.0,108488.0,111942.0,111102.0,105481.0,99825.0,98672.0,98954.0,100289.0,96551.0,98925.0,103165.0,106472.0,112764.0,111496.0,112299.0,110864.0,112300.0,109280.0,111716.0,110037.0,116375.0,112072.0,119929.0,114539.0,118155.0,112253.0,108880.0,108977.0,111924.0,107689.0,102825.0,109698.0,110031.0],\"decreasing\":{\"line\":{\"color\":\"red\"}},\"high\":[106125.0,107062.0,109873.0,113057.0,113666.0,114899.0,115734.0,113721.0,115948.0,114627.0,115311.0,119729.0,121579.0,121628.0,118615.0,116191.0,111819.0,108382.0,107773.0,109774.0,112441.0,112709.0,111935.0,105478.0,101069.0,102237.0,101577.0,100282.0,99724.0,103989.0,107176.0,112764.0,114375.0,114156.0,113222.0,112671.0,114160.0,114392.0,111713.0,118382.0,116841.0,120752.0,119924.0,120039.0,118240.0,114322.0,112612.0,113761.0,112150.0,107561.0,109994.0,111178.0],\"increasing\":{\"line\":{\"color\":\"green\"}},\"low\":[100850.0,101038.0,105786.0,106624.0,110321.0,110943.0,112701.0,109125.0,113143.0,110969.0,107781.0,115208.0,118061.0,116791.0,115624.0,110591.0,107876.0,103923.0,102386.0,105760.0,108399.0,110655.0,104648.0,98402.0,97775.0,97231.0,96499.0,95267.0,96553.0,98925.0,101694.0,106473.0,111067.0,109858.0,108217.0,108619.0,108489.0,108508.0,106244.0,110048.0,111631.0,112090.0,112577.0,112113.0,108516.0,107245.0,107867.0,108378.0,106906.0,101632.0,102770.0,107418.0],\"name\":\"\",\"open\":[104823.0,102719.0,106927.0,108941.0,111910.0,112247.0,113643.0,112880.0,113143.0,114469.0,111716.0,115307.0,119082.0,121569.0,118320.0,116182.0,111077.0,107876.0,105109.0,108685.0,108500.0,111944.0,111102.0,105476.0,99824.0,98673.0,98952.0,100282.0,96553.0,98926.0,103165.0,106473.0,112767.0,111487.0,112296.0,110868.0,112307.0,109283.0,111713.0,110048.0,116377.0,112107.0,119922.0,114533.0,118148.0,112256.0,108868.0,108977.0,111922.0,107518.0,102859.0,109699.0],\"showlegend\":false,\"x\":[\"2022-01-01T00:00:00\",\"2022-01-08T00:00:00\",\"2022-01-15T00:00:00\",\"2022-01-22T00:00:00\",\"2022-01-29T00:00:00\",\"2022-02-05T00:00:00\",\"2022-02-12T00:00:00\",\"2022-02-19T00:00:00\",\"2022-02-26T00:00:00\",\"2022-03-05T00:00:00\",\"2022-03-12T00:00:00\",\"2022-03-19T00:00:00\",\"2022-03-26T00:00:00\",\"2022-04-02T00:00:00\",\"2022-04-09T00:00:00\",\"2022-04-16T00:00:00\",\"2022-04-23T00:00:00\",\"2022-04-30T00:00:00\",\"2022-05-07T00:00:00\",\"2022-05-14T00:00:00\",\"2022-05-21T00:00:00\",\"2022-05-28T00:00:00\",\"2022-06-04T00:00:00\",\"2022-06-11T00:00:00\",\"2022-06-18T00:00:00\",\"2022-06-25T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-09T00:00:00\",\"2022-07-16T00:00:00\",\"2022-07-23T00:00:00\",\"2022-07-30T00:00:00\",\"2022-08-06T00:00:00\",\"2022-08-13T00:00:00\",\"2022-08-20T00:00:00\",\"2022-08-27T00:00:00\",\"2022-09-03T00:00:00\",\"2022-09-10T00:00:00\",\"2022-09-17T00:00:00\",\"2022-09-24T00:00:00\",\"2022-10-01T00:00:00\",\"2022-10-08T00:00:00\",\"2022-10-15T00:00:00\",\"2022-10-22T00:00:00\",\"2022-10-29T00:00:00\",\"2022-11-05T00:00:00\",\"2022-11-12T00:00:00\",\"2022-11-19T00:00:00\",\"2022-11-26T00:00:00\",\"2022-12-03T00:00:00\",\"2022-12-10T00:00:00\",\"2022-12-17T00:00:00\",\"2022-12-24T00:00:00\"],\"type\":\"candlestick\"},{\"line\":{\"color\":\"black\",\"dash\":\"solid\",\"width\":2},\"mode\":\"lines\",\"name\":\"Topos / Fundos\",\"showlegend\":true,\"x\":[\"2022-02-05T00:00:00\",\"2022-02-19T00:00:00\",\"2022-02-26T00:00:00\",\"2022-03-12T00:00:00\",\"2022-03-26T00:00:00\",\"2022-05-07T00:00:00\",\"2022-07-02T00:00:00\",\"2022-07-09T00:00:00\",\"2022-08-20T00:00:00\",\"2022-08-27T00:00:00\",\"2022-09-10T00:00:00\",\"2022-09-24T00:00:00\",\"2022-10-01T00:00:00\",\"2022-11-12T00:00:00\",\"2022-11-26T00:00:00\",\"2022-12-10T00:00:00\"],\"y\":[114899.0,109125.0,115948.0,107781.0,121579.0,102386.0,101577.0,95267.0,114156.0,108217.0,114160.0,106244.0,118382.0,107245.0,113761.0,101632.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"scatter\":[{\"type\":\"scatter\"}]}},\"xaxis\":{\"rangebreaks\":[{\"bounds\":[\"sat\",\"mond\"]}],\"rangeslider\":{\"visible\":false}},\"title\":{\"text\":\"<b>Indicador topos e fundos\"},\"margin\":{\"l\":75,\"r\":75,\"t\":75,\"b\":75},\"paper_bgcolor\":\"#f7f8fa\",\"width\":1200,\"height\":600},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('81b7a5ab-7e42-4642-a1b7-2e9757919fb1');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["fig_diario"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"iwNVWD5eo46B","executionInfo":{"status":"ok","timestamp":1683727043131,"user_tz":180,"elapsed":482,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"512ce3f2-4bef-437e-d5ee-b0bab99ddfb4"},"execution_count":123,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"9f016c32-d3ff-432e-b905-67dd0b7a7f2a\" class=\"plotly-graph-div\" style=\"height:600px; width:1200px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9f016c32-d3ff-432e-b905-67dd0b7a7f2a\")) {                    Plotly.newPlot(                        \"9f016c32-d3ff-432e-b905-67dd0b7a7f2a\",                        [{\"close\":[103922.0,103514.0,101006.0,101561.0,102719.0,101945.0,103779.0,105686.0,105530.0,106928.0,106692.0,106522.0,108013.0,109102.0,108942.0,107752.0,109845.0,111573.0,112315.0,111478.0,112388.0,113147.0,112161.0,111696.0,112245.0,111996.0,112234.0,112461.0,113359.0,113572.0,113807.0,114660.0,115181.0,113528.0,112768.0,111725.0,112892.0,112008.0,111592.0,113142.0,115174.0,115166.0,114474.0,111593.0,111203.0,113900.0,113663.0,111713.0,109928.0,108959.0,111112.0,113076.0,115311.0,116155.0,117272.0,117457.0,119053.0,119081.0,118738.0,120014.0,120260.0,119999.0,121570.0,121280.0,118885.0,118228.0,118862.0,118322.0,116953.0,116147.0,116782.0,116182.0,115687.0,115057.0,114344.0,111078.0,110685.0,108213.0,109349.0,109919.0,107876.0,106639.0,106528.0,108344.0,105304.0,105135.0,103250.0,103110.0,104397.0,105688.0,106924.0,108233.0,108789.0,106247.0,107005.0,108488.0,110346.0,110581.0,110580.0,111890.0,111942.0,111032.0,111351.0,111360.0,112393.0,111102.0,110186.0,110070.0,108368.0,107094.0,105481.0,102598.0,102063.0,102807.0,99825.0,99853.0,99685.0,99522.0,98080.0,98672.0,100764.0,100591.0,99622.0,98542.0,98954.0,98609.0,98295.0,98719.0,100730.0,100289.0,98212.0,98271.0,97881.0,96121.0,96551.0,96916.0,98245.0,98287.0,99033.0,98925.0,100270.0,99772.0,101438.0,102597.0,103165.0,102225.0,103362.0,103775.0,105892.0,106472.0,108402.0,108651.0,110236.0,109718.0,112764.0,113032.0,113512.0,113708.0,113813.0,111496.0,110501.0,112857.0,112898.0,113532.0,112299.0,112323.0,110431.0,109523.0,110405.0,110864.0,112203.0,109764.0,109916.0,112300.0,113407.0,110794.0,110547.0,109954.0,109280.0,111824.0,112517.0,111936.0,114070.0,111716.0,109114.0,108376.0,108451.0,107664.0,110037.0,116134.0,116230.0,117198.0,117561.0,116375.0,115941.0,114827.0,114300.0,112072.0,113624.0,115743.0,116274.0,117171.0,119929.0,116013.0,114626.0,112764.0,114641.0,114539.0,116037.0,116929.0,116896.0,118155.0,115342.0,116160.0,113580.0,109775.0,112253.0,113161.0,110243.0,109703.0,108880.0,109748.0,109037.0,108683.0,111831.0,108977.0,108782.0,110910.0,112486.0,110926.0,111924.0,109401.0,109533.0,109361.0,107245.0,107689.0,105264.0,103892.0,103803.0,103738.0,102825.0,104530.0,106979.0,107313.0,107317.0,109698.0,108738.0,108347.0,110237.0,110031.0],\"decreasing\":{\"line\":{\"color\":\"red\"}},\"high\":[106125.0,104276.0,103514.0,102235.0,102719.0,102719.0,103780.0,105869.0,106251.0,107062.0,106928.0,107013.0,108602.0,109873.0,109786.0,108948.0,110115.0,112695.0,113057.0,112969.0,112495.0,113302.0,113666.0,112502.0,112415.0,112517.0,112251.0,113163.0,113812.0,114899.0,114167.0,114819.0,115734.0,115214.0,114213.0,113405.0,113315.0,113721.0,112001.0,113142.0,115429.0,115948.0,115166.0,114529.0,112390.0,114051.0,113939.0,114627.0,112299.0,109925.0,111183.0,113088.0,115311.0,116360.0,117541.0,118270.0,119256.0,119729.0,119444.0,120900.0,120531.0,120880.0,121579.0,121570.0,121628.0,118885.0,119247.0,118868.0,118320.0,118615.0,117329.0,116781.0,116191.0,115687.0,115057.0,114343.0,111155.0,110685.0,110107.0,110702.0,111819.0,107884.0,107127.0,108382.0,108337.0,106268.0,105109.0,104286.0,105374.0,105708.0,107773.0,108685.0,109774.0,108096.0,107420.0,108795.0,110680.0,110635.0,111006.0,112102.0,112441.0,112690.0,111903.0,111931.0,112709.0,112392.0,111935.0,110435.0,110142.0,108510.0,107092.0,105478.0,103328.0,103952.0,102801.0,100481.0,101069.0,100374.0,100232.0,99313.0,101106.0,102237.0,101313.0,99619.0,99340.0,99353.0,98608.0,99141.0,101420.0,101577.0,100282.0,98737.0,98928.0,97879.0,96971.0,98291.0,98346.0,98366.0,99057.0,99724.0,100508.0,100753.0,101471.0,102686.0,103989.0,103317.0,103660.0,103878.0,106162.0,107176.0,108489.0,109331.0,110362.0,111310.0,112764.0,113214.0,113626.0,114146.0,114375.0,113807.0,111487.0,112965.0,113888.0,114156.0,114091.0,113222.0,112869.0,111364.0,110405.0,112264.0,112671.0,112203.0,110768.0,112540.0,114160.0,113400.0,111504.0,111100.0,109952.0,111976.0,112544.0,113294.0,114392.0,112457.0,111713.0,110161.0,108970.0,108449.0,110502.0,116134.0,118280.0,117514.0,118382.0,117960.0,116841.0,115928.0,115367.0,114712.0,114406.0,115795.0,116459.0,117367.0,120752.0,119924.0,116203.0,114626.0,116236.0,114712.0,116763.0,118261.0,117373.0,120039.0,118240.0,117072.0,116183.0,113579.0,113010.0,114322.0,113473.0,110242.0,111585.0,110235.0,110224.0,109285.0,112612.0,112025.0,109476.0,112187.0,112486.0,112479.0,113761.0,112150.0,110663.0,110247.0,109286.0,108566.0,107561.0,106689.0,104516.0,105483.0,104018.0,105107.0,107792.0,107991.0,108383.0,109994.0,109755.0,109353.0,110536.0,111178.0],\"increasing\":{\"line\":{\"color\":\"green\"}},\"low\":[103413.0,103096.0,100850.0,101000.0,101104.0,101038.0,101918.0,103771.0,104974.0,105028.0,106097.0,105786.0,106669.0,108015.0,108368.0,106624.0,107185.0,110204.0,111303.0,111407.0,111195.0,112135.0,111645.0,111225.0,110321.0,111490.0,110943.0,111710.0,112163.0,113128.0,113358.0,113882.0,114816.0,113389.0,112701.0,111608.0,111727.0,111748.0,109125.0,110673.0,113143.0,115010.0,113389.0,111140.0,110969.0,111207.0,111889.0,111332.0,109717.0,107781.0,108958.0,111070.0,112475.0,115208.0,116157.0,117036.0,117151.0,118548.0,118061.0,118740.0,119775.0,119999.0,120001.0,120754.0,118794.0,116791.0,117509.0,117487.0,116953.0,116054.0,116150.0,115624.0,115177.0,114277.0,113945.0,110591.0,109222.0,107978.0,108214.0,108905.0,107876.0,105218.0,106033.0,104933.0,103923.0,103984.0,102768.0,102386.0,103008.0,103579.0,105691.0,108199.0,108245.0,106038.0,105760.0,107351.0,108500.0,108399.0,109699.0,110388.0,111558.0,110655.0,110685.0,110822.0,111218.0,110935.0,110015.0,109394.0,108045.0,107068.0,104648.0,101700.0,101325.0,102046.0,98402.0,98409.0,99167.0,98050.0,97775.0,98031.0,98672.0,99956.0,99218.0,97758.0,97231.0,98264.0,96499.0,97423.0,98722.0,99958.0,97854.0,97253.0,97403.0,95431.0,95267.0,96553.0,96917.0,97277.0,97088.0,98321.0,98925.0,99365.0,99772.0,101045.0,102514.0,101764.0,101694.0,102822.0,103777.0,105518.0,106473.0,107842.0,108657.0,109604.0,109718.0,111067.0,112690.0,112483.0,113304.0,111146.0,109858.0,110503.0,112632.0,112768.0,111978.0,111689.0,110103.0,109523.0,108217.0,110409.0,110865.0,109348.0,108619.0,109922.0,112305.0,110522.0,110118.0,109524.0,108489.0,108508.0,111393.0,111380.0,111819.0,110732.0,109022.0,108120.0,107914.0,106244.0,107315.0,110048.0,115837.0,115906.0,117144.0,115924.0,115261.0,114297.0,112690.0,111631.0,112090.0,113627.0,115264.0,116276.0,116736.0,115793.0,114626.0,112577.0,112765.0,113336.0,112113.0,115547.0,114485.0,116904.0,115266.0,114688.0,113110.0,108516.0,109408.0,111930.0,109512.0,107245.0,108512.0,107957.0,107867.0,107902.0,108846.0,108552.0,108378.0,108784.0,110202.0,110548.0,109963.0,109270.0,109217.0,108612.0,106906.0,107089.0,103877.0,103409.0,101632.0,103014.0,102248.0,102770.0,104607.0,106066.0,106510.0,107552.0,108309.0,107418.0,108578.0,109560.0],\"name\":\"\",\"open\":[104823.0,103922.0,103514.0,101006.0,101561.0,102719.0,101946.0,103779.0,105686.0,105530.0,106927.0,106369.0,106670.0,108015.0,109097.0,108941.0,107935.0,110207.0,111303.0,112611.0,111910.0,112143.0,113228.0,111897.0,111696.0,112247.0,111995.0,112233.0,112462.0,113368.0,113643.0,113905.0,114830.0,115181.0,113534.0,112880.0,111727.0,112892.0,112001.0,111591.0,113143.0,115173.0,115166.0,114469.0,111594.0,111210.0,113900.0,113664.0,111716.0,109925.0,108958.0,111113.0,113076.0,115307.0,116157.0,117270.0,117460.0,119062.0,119082.0,118740.0,120013.0,120261.0,120001.0,121569.0,121279.0,118885.0,118226.0,118861.0,118320.0,116963.0,116150.0,116781.0,116182.0,115687.0,115057.0,114343.0,111077.0,110684.0,108214.0,109349.0,109922.0,107876.0,106640.0,106529.0,108337.0,105303.0,105109.0,103251.0,103110.0,104395.0,105691.0,108685.0,108246.0,107903.0,106249.0,108520.0,108500.0,110340.0,110085.0,110577.0,111890.0,111944.0,111036.0,111351.0,111363.0,112392.0,111102.0,110185.0,110067.0,108367.0,107091.0,105476.0,102598.0,102068.0,102800.0,99824.0,99854.0,99678.0,99523.0,98081.0,98673.0,100766.0,100592.0,99619.0,98542.0,98952.0,98608.0,98294.0,98722.0,100732.0,100282.0,98212.0,98258.0,97879.0,96119.0,96553.0,96920.0,98244.0,98286.0,99034.0,98926.0,100270.0,99773.0,101437.0,102597.0,103165.0,102225.0,103362.0,103777.0,105893.0,106473.0,108403.0,108658.0,110236.0,109718.0,112767.0,113034.0,113508.0,113708.0,113807.0,111487.0,110504.0,112856.0,112898.0,113533.0,112296.0,112323.0,110431.0,109524.0,110409.0,110868.0,112203.0,109771.0,109922.0,112307.0,113398.0,110794.0,110547.0,109951.0,109283.0,111824.0,112517.0,111942.0,112258.0,111713.0,109122.0,108377.0,108449.0,107664.0,110048.0,116704.0,116231.0,117200.0,117560.0,116377.0,115928.0,114819.0,114301.0,112107.0,113627.0,115744.0,116276.0,117170.0,119922.0,116016.0,114626.0,112766.0,114636.0,114533.0,116037.0,116927.0,116907.0,118148.0,115340.0,116153.0,113579.0,109775.0,112256.0,113166.0,110241.0,109706.0,108868.0,109750.0,109036.0,108846.0,111831.0,108977.0,108784.0,110910.0,112479.0,110926.0,111922.0,109403.0,110188.0,109068.0,107250.0,107518.0,105345.0,103536.0,103739.0,103737.0,102859.0,104740.0,106866.0,107436.0,107552.0,109699.0,108739.0,108578.0,110237.0],\"showlegend\":false,\"x\":[\"2022-01-03T00:00:00\",\"2022-01-04T00:00:00\",\"2022-01-05T00:00:00\",\"2022-01-06T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-10T00:00:00\",\"2022-01-11T00:00:00\",\"2022-01-12T00:00:00\",\"2022-01-13T00:00:00\",\"2022-01-14T00:00:00\",\"2022-01-17T00:00:00\",\"2022-01-18T00:00:00\",\"2022-01-19T00:00:00\",\"2022-01-20T00:00:00\",\"2022-01-21T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-25T00:00:00\",\"2022-01-26T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-02T00:00:00\",\"2022-02-03T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-08T00:00:00\",\"2022-02-09T00:00:00\",\"2022-02-10T00:00:00\",\"2022-02-11T00:00:00\",\"2022-02-14T00:00:00\",\"2022-02-15T00:00:00\",\"2022-02-16T00:00:00\",\"2022-02-17T00:00:00\",\"2022-02-18T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-22T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-02-25T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-08T00:00:00\",\"2022-08-09T00:00:00\",\"2022-08-10T00:00:00\",\"2022-08-11T00:00:00\",\"2022-08-12T00:00:00\",\"2022-08-15T00:00:00\",\"2022-08-16T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-18T00:00:00\",\"2022-08-19T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-23T00:00:00\",\"2022-08-24T00:00:00\",\"2022-08-25T00:00:00\",\"2022-08-26T00:00:00\",\"2022-08-29T00:00:00\",\"2022-08-30T00:00:00\",\"2022-08-31T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-05T00:00:00\",\"2022-09-06T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-09T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-14T00:00:00\",\"2022-09-15T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-19T00:00:00\",\"2022-09-20T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-22T00:00:00\",\"2022-09-23T00:00:00\",\"2022-09-26T00:00:00\",\"2022-09-27T00:00:00\",\"2022-09-28T00:00:00\",\"2022-09-29T00:00:00\",\"2022-09-30T00:00:00\",\"2022-10-03T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-05T00:00:00\",\"2022-10-06T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-10T00:00:00\",\"2022-10-11T00:00:00\",\"2022-10-13T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-17T00:00:00\",\"2022-10-18T00:00:00\",\"2022-10-19T00:00:00\",\"2022-10-20T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-25T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-28T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-03T00:00:00\",\"2022-11-04T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-08T00:00:00\",\"2022-11-09T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-11T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-21T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-23T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-29T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-02T00:00:00\",\"2022-12-05T00:00:00\",\"2022-12-06T00:00:00\",\"2022-12-07T00:00:00\",\"2022-12-08T00:00:00\",\"2022-12-09T00:00:00\",\"2022-12-12T00:00:00\",\"2022-12-13T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-16T00:00:00\",\"2022-12-19T00:00:00\",\"2022-12-20T00:00:00\",\"2022-12-21T00:00:00\",\"2022-12-22T00:00:00\",\"2022-12-23T00:00:00\",\"2022-12-26T00:00:00\",\"2022-12-27T00:00:00\",\"2022-12-28T00:00:00\",\"2022-12-29T00:00:00\"],\"type\":\"candlestick\"},{\"line\":{\"color\":\"black\",\"dash\":\"solid\",\"width\":2},\"mode\":\"lines\",\"name\":\"Topos / Fundos\",\"showlegend\":true,\"x\":[\"2022-01-05T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-25T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-26T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-19T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-23T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-26T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-29T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-27T00:00:00\"],\"y\":[100850.0,102719.0,106624.0,112969.0,111195.0,113302.0,110321.0,112517.0,111608.0,113721.0,109125.0,115429.0,110969.0,113939.0,107781.0,119729.0,116791.0,118615.0,107978.0,108337.0,102386.0,108685.0,105760.0,103952.0,98402.0,101069.0,97775.0,99353.0,96499.0,98928.0,95267.0,103989.0,101694.0,114146.0,109858.0,114091.0,108217.0,112264.0,108619.0,113400.0,108489.0,113294.0,106244.0,117960.0,111631.0,119924.0,112577.0,116236.0,112113.0,118240.0,108516.0,113473.0,107245.0,111585.0,107867.0,112025.0,108378.0,112479.0,101632.0,105483.0,107418.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"scatter\":[{\"type\":\"scatter\"}]}},\"xaxis\":{\"rangebreaks\":[{\"bounds\":[\"sat\",\"mond\"]}],\"rangeslider\":{\"visible\":false}},\"title\":{\"text\":\"<b>Indicador topos e fundos\"},\"margin\":{\"l\":75,\"r\":75,\"t\":75,\"b\":75},\"paper_bgcolor\":\"#f7f8fa\",\"width\":1200,\"height\":600},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('9f016c32-d3ff-432e-b905-67dd0b7a7f2a');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Screening de Ativos IBOV"],"metadata":{"id":"tK5DEbguqEGp"}},{"cell_type":"markdown","source":["Vamos fazer o screening de quais ativos do IBOV estão nesse momento batendo o último topo"],"metadata":{"id":"0kXzTpCGriLR"}},{"cell_type":"code","source":["lista_tickers = ['ABEV3', 'ALPA4', 'ARZZ3', 'ASAI3', 'AZUL4', 'B3SA3', 'BBDC3', 'BBDC4', 'BBSE3',\n","                 'BEEF3', 'BPAC11', 'BPAN4', 'BRFS3', 'BRKM5', 'CASH3', 'CIEL3', 'CMIG4', 'CMIN3', 'EMBR3', 'GGBR4', \n","                 'GOLL4', 'HAPV3', 'ITSA4', 'ITUB4', 'KLBN11', 'MGLU3', 'PETR3', 'PETR4', 'PETZ3', 'USIM5', 'WEGE3']\n","                "],"metadata":{"id":"LGx9z8syqIL8","executionInfo":{"status":"ok","timestamp":1683727036539,"user_tz":180,"elapsed":401,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":122,"outputs":[]},{"cell_type":"code","source":["# Como os dados vieram da yfinance, precisamos adicioar o .SA em cada ativo\n","lista_tikers_yf = [x + '.SA' for x in lista_tickers]"],"metadata":{"id":"g6iWJtturOq1","executionInfo":{"status":"ok","timestamp":1683727052212,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":124,"outputs":[]},{"cell_type":"code","source":["lista_tikers_yf[0:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7ZS-kN-Athm9","executionInfo":{"status":"ok","timestamp":1683727084165,"user_tz":180,"elapsed":773,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"a830f760-2368-460d-d35e-dd590461ad91"},"execution_count":126,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['ABEV3.SA',\n"," 'ALPA4.SA',\n"," 'ARZZ3.SA',\n"," 'ASAI3.SA',\n"," 'AZUL4.SA',\n"," 'B3SA3.SA',\n"," 'BBDC3.SA',\n"," 'BBDC4.SA',\n"," 'BBSE3.SA',\n"," 'BEEF3.SA']"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["# Criando uma lista de ativos com as cotações de cada ativo\n","\n","ls_close_ativos = []\n","indice_ativo = 0\n","\n","for i in lista_tikers_yf:\n","    df_1d_ativo = yf.download(i, start='2022-01-01', interval='1d', auto_adjust=True)\n","    df_1d_ativo['Ticker'] = i\n","    df_1d_ativo['Indice_ativo'] = indice_ativo\n","    indice_ativo += 1\n","    ls_close_ativos.append(df_1d_ativo)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3FzqIHZ-u8a3","executionInfo":{"status":"ok","timestamp":1683727094096,"user_tz":180,"elapsed":4271,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"50ed4887-d267-4533-9016-1d81e72b07c4"},"execution_count":127,"outputs":[{"output_type":"stream","name":"stdout","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"code","source":["# Enumerando a minha lista de ativos \n","list(enumerate(lista_tikers_yf))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yx1J6qS_wImd","executionInfo":{"status":"ok","timestamp":1683727098448,"user_tz":180,"elapsed":307,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"fbe3e9e0-8c56-4694-d8dd-e8b50e53c9c2"},"execution_count":128,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(0, 'ABEV3.SA'),\n"," (1, 'ALPA4.SA'),\n"," (2, 'ARZZ3.SA'),\n"," (3, 'ASAI3.SA'),\n"," (4, 'AZUL4.SA'),\n"," (5, 'B3SA3.SA'),\n"," (6, 'BBDC3.SA'),\n"," (7, 'BBDC4.SA'),\n"," (8, 'BBSE3.SA'),\n"," (9, 'BEEF3.SA'),\n"," (10, 'BPAC11.SA'),\n"," (11, 'BPAN4.SA'),\n"," (12, 'BRFS3.SA'),\n"," (13, 'BRKM5.SA'),\n"," (14, 'CASH3.SA'),\n"," (15, 'CIEL3.SA'),\n"," (16, 'CMIG4.SA'),\n"," (17, 'CMIN3.SA'),\n"," (18, 'EMBR3.SA'),\n"," (19, 'GGBR4.SA'),\n"," (20, 'GOLL4.SA'),\n"," (21, 'HAPV3.SA'),\n"," (22, 'ITSA4.SA'),\n"," (23, 'ITUB4.SA'),\n"," (24, 'KLBN11.SA'),\n"," (25, 'MGLU3.SA'),\n"," (26, 'PETR3.SA'),\n"," (27, 'PETR4.SA'),\n"," (28, 'PETZ3.SA'),\n"," (29, 'USIM5.SA'),\n"," (30, 'WEGE3.SA')]"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["# Usando o número do índice para visualizar o DataFrame do ativo\n","ls_close_ativos[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"CA-hDuz9wNMP","executionInfo":{"status":"ok","timestamp":1683727102856,"user_tz":180,"elapsed":9,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"b2332e8f-68e7-4f1d-b721-1b086035e6f5"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Open       High        Low      Close    Volume    Ticker  \\\n","Date                                                                         \n","2022-01-03  14.648190  14.762184  14.391704  14.562695  23833600  ABEV3.SA   \n","2022-01-04  14.553195  14.629191  14.287210  14.543696  16357700  ABEV3.SA   \n","2022-01-05  14.486699  14.524697  14.211214  14.258712  24652000  ABEV3.SA   \n","2022-01-06  14.287210  14.306209  13.926230  14.030725  20406300  ABEV3.SA   \n","2022-01-07  14.059223  14.059223  13.726741  13.802736  19673600  ABEV3.SA   \n","...               ...        ...        ...        ...       ...       ...   \n","2023-05-03  14.250000  14.680000  14.130000  14.580000  34868300  ABEV3.SA   \n","2023-05-04  15.200000  15.310000  14.470000  14.630000  54120800  ABEV3.SA   \n","2023-05-05  14.670000  14.710000  14.300000  14.490000  25846600  ABEV3.SA   \n","2023-05-08  14.570000  14.640000  14.430000  14.510000  18558200  ABEV3.SA   \n","2023-05-10  14.440000  14.490000  14.280000  14.350000   3929700  ABEV3.SA   \n","\n","            Indice_ativo  \n","Date                      \n","2022-01-03             0  \n","2022-01-04             0  \n","2022-01-05             0  \n","2022-01-06             0  \n","2022-01-07             0  \n","...                  ...  \n","2023-05-03             0  \n","2023-05-04             0  \n","2023-05-05             0  \n","2023-05-08             0  \n","2023-05-10             0  \n","\n","[337 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-f8644084-fdb6-4b13-bdae-32f2c5e2c004\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Ticker</th>\n","      <th>Indice_ativo</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-01-03</th>\n","      <td>14.648190</td>\n","      <td>14.762184</td>\n","      <td>14.391704</td>\n","      <td>14.562695</td>\n","      <td>23833600</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-04</th>\n","      <td>14.553195</td>\n","      <td>14.629191</td>\n","      <td>14.287210</td>\n","      <td>14.543696</td>\n","      <td>16357700</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-05</th>\n","      <td>14.486699</td>\n","      <td>14.524697</td>\n","      <td>14.211214</td>\n","      <td>14.258712</td>\n","      <td>24652000</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-06</th>\n","      <td>14.287210</td>\n","      <td>14.306209</td>\n","      <td>13.926230</td>\n","      <td>14.030725</td>\n","      <td>20406300</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-01-07</th>\n","      <td>14.059223</td>\n","      <td>14.059223</td>\n","      <td>13.726741</td>\n","      <td>13.802736</td>\n","      <td>19673600</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-03</th>\n","      <td>14.250000</td>\n","      <td>14.680000</td>\n","      <td>14.130000</td>\n","      <td>14.580000</td>\n","      <td>34868300</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-04</th>\n","      <td>15.200000</td>\n","      <td>15.310000</td>\n","      <td>14.470000</td>\n","      <td>14.630000</td>\n","      <td>54120800</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-05</th>\n","      <td>14.670000</td>\n","      <td>14.710000</td>\n","      <td>14.300000</td>\n","      <td>14.490000</td>\n","      <td>25846600</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-08</th>\n","      <td>14.570000</td>\n","      <td>14.640000</td>\n","      <td>14.430000</td>\n","      <td>14.510000</td>\n","      <td>18558200</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-10</th>\n","      <td>14.440000</td>\n","      <td>14.490000</td>\n","      <td>14.280000</td>\n","      <td>14.350000</td>\n","      <td>3929700</td>\n","      <td>ABEV3.SA</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>337 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8644084-fdb6-4b13-bdae-32f2c5e2c004')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f8644084-fdb6-4b13-bdae-32f2c5e2c004 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f8644084-fdb6-4b13-bdae-32f2c5e2c004');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["# Trabalhando com a lista de ativos\n","\n","n_candles = 10\n","\n","ls_ativos_topos_fundos = []\n","\n","for df in ls_close_ativos:\n","    \n","    ls_vertices = ['neutro']\n","    dict_topos_fundos = {'vertice': [], 'data': [], 'preco': []}\n","\n","    for i in range(len(df)):\n","\n","      if localizar_fundos(df, n_candles).iloc[i]:\n","        if ls_vertices[-1] != 'fundo':\n","          dict_topos_fundos['vertice'].append('fundo')\n","          dict_topos_fundos['data'].append(df.index[i])\n","          dict_topos_fundos['preco'].append(df.Low.iloc[i])\n","          ls_vertices.append('fundo')\n","\n","        else:\n","          if df.Low.iloc[i] < dict_topos_fundos['preco'][-1]:\n","            dict_topos_fundos['data'][-1] = df.index[i]\n","            dict_topos_fundos['preco'][-1] = df.Low.iloc[i]\n","\n","      if localizar_topos(df, n_candles).iloc[i]:\n","        if ls_vertices[-1] != 'topo':\n","          dict_topos_fundos['vertice'].append('topo')\n","          dict_topos_fundos['data'].append(df.index[i])\n","          dict_topos_fundos['preco'].append(df.High.iloc[i])\n","          ls_vertices.append('topo')\n","\n","        else:\n","          if df.High.iloc[i] < dict_topos_fundos['preco'][-1]:\n","            dict_topos_fundos['data'][-1] = df.index[i]\n","            dict_topos_fundos['preco'][-1] = df.High.iloc[i]\n","\n","    # Transformamos o Dicionario em DataFrame\n","    df_topos_fundos = pd.DataFrame(dict_topos_fundos)\n","    df_topos_fundos.index = df_topos_fundos.data\n","\n","    # Efetuamos o merge dos dados\n","    df_final = pd.merge(df, df_topos_fundos, left_index=True, right_index=True, how='left')\n","    df_final.head(20)\n","\n","    ls_ativos_topos_fundos.append(df_final)\n"],"metadata":{"id":"e27lv1ExxzgP","executionInfo":{"status":"ok","timestamp":1683727180345,"user_tz":180,"elapsed":57243,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":130,"outputs":[]},{"cell_type":"code","source":["# Função que pega do DataFrame completo para encontrar os Topos e Fundos\n","\n","def ativo_rompeu_topo(df):\n","    ultimo_topo = df[df.vertice == 'topo']['preco'][-1]\n","    distancia_topo = (ultimo_topo - df.Close[-1])/ultimo_topo*100\n","\n","    if distancia_topo < 0:\n","       return 'rompeu topo'\n","    else:\n","       return 'nao rompeu topo'\n"],"metadata":{"id":"ozcbQPpvAyAq","executionInfo":{"status":"ok","timestamp":1683728084746,"user_tz":180,"elapsed":311,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}}},"execution_count":136,"outputs":[]},{"cell_type":"code","source":["# Lista os ativos que romperam ou não o topo anterior\n","\n","for df in ls_ativos_topos_fundos:\n","    if ativo_rompeu_topo(df)=='rompeu topo':\n","       print(df.Ticker[0],'indice=',df.Indice_ativo[0],'rompeu topo anterior')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9JGFmm3QA55v","executionInfo":{"status":"ok","timestamp":1683728109401,"user_tz":180,"elapsed":395,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"b310d570-22f5-4751-e282-44ba04f5e8cf"},"execution_count":137,"outputs":[{"output_type":"stream","name":"stdout","text":["ABEV3.SA indice= 0 rompeu topo anterior\n","ALPA4.SA indice= 1 rompeu topo anterior\n","ARZZ3.SA indice= 2 rompeu topo anterior\n","AZUL4.SA indice= 4 rompeu topo anterior\n","B3SA3.SA indice= 5 rompeu topo anterior\n","BBDC3.SA indice= 6 rompeu topo anterior\n","BBDC4.SA indice= 7 rompeu topo anterior\n","BEEF3.SA indice= 9 rompeu topo anterior\n","BPAC11.SA indice= 10 rompeu topo anterior\n","BPAN4.SA indice= 11 rompeu topo anterior\n","BRFS3.SA indice= 12 rompeu topo anterior\n","BRKM5.SA indice= 13 rompeu topo anterior\n","CASH3.SA indice= 14 rompeu topo anterior\n","CIEL3.SA indice= 15 rompeu topo anterior\n","CMIG4.SA indice= 16 rompeu topo anterior\n","CMIN3.SA indice= 17 rompeu topo anterior\n","GOLL4.SA indice= 20 rompeu topo anterior\n","HAPV3.SA indice= 21 rompeu topo anterior\n","ITSA4.SA indice= 22 rompeu topo anterior\n","ITUB4.SA indice= 23 rompeu topo anterior\n","KLBN11.SA indice= 24 rompeu topo anterior\n","MGLU3.SA indice= 25 rompeu topo anterior\n","PETR3.SA indice= 26 rompeu topo anterior\n","PETR4.SA indice= 27 rompeu topo anterior\n","PETZ3.SA indice= 28 rompeu topo anterior\n","USIM5.SA indice= 29 rompeu topo anterior\n","WEGE3.SA indice= 30 rompeu topo anterior\n"]}]},{"cell_type":"code","source":["# Plotando o candle graph com as informações dos ativos que romperam o topo anterior\n","\n","# O [i] é o indice e podemos navegar nele basedo no indice de cada ativo\n","# No teste abaixo o item 5 é o ativo B3SA3\n","i = 0\n","\n","df_figure = ls_ativos_topos_fundos[i]\n","df_topos_fundos = ls_ativos_topos_fundos[i][~ls_ativos_topos_fundos[i].preco.isna()]\n","\n","# Linhas para gerar os candles sticks\n","fig_topos_fundos = go.Figure(data=[go.Candlestick(name='', x=df_figure.index, open=df_figure.Open, high=df_figure.High,\n","                                            low=df_figure.Low, close=df_figure.Close, increasing_line_color='green', \n","                                            decreasing_line_color='red', showlegend=False)])\n","\n","# Linhas para gerar os topos e fundos\n","fig_topos_fundos.add_trace(go.Scatter(x=df_topos_fundos.data, y=df_topos_fundos.preco, mode=\"lines\", line_width=2, line_dash=\"solid\",\n","                                      line_color=\"black\", name=\"Topos / Fundos\", showlegend=True))\n","\n","# Linhas para excluir \"Sabados e Domingos\" uma vez que em nosso df vem todos os dias.\n","fig_topos_fundos.update_xaxes(rangebreaks=[dict(bounds=[\"sat\", \"mond\"])])\n","\n","# Linhas para \"Maquiar\" o gráfico, com cor, margem, título e etc.\n","fig_topos_fundos.update_layout(xaxis_rangeslider_visible=False, title_text='<b>Indicador topos e fundos', template='none', \n","                              margin=dict(l=75, r=75, t=75, b=75), paper_bgcolor=\"#f7f8fa\", width=1200, height=600)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"JP242ol9BF1d","executionInfo":{"status":"ok","timestamp":1683728143260,"user_tz":180,"elapsed":359,"user":{"displayName":"Lucas Chies","userId":"00246968685859917020"}},"outputId":"3dbc8f17-d613-4844-f4f3-d792d5a679a1"},"execution_count":138,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"c700ac54-bc86-4c48-b597-a9c1a49bb020\" class=\"plotly-graph-div\" style=\"height:600px; width:1200px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c700ac54-bc86-4c48-b597-a9c1a49bb020\")) {                    Plotly.newPlot(                        \"c700ac54-bc86-4c48-b597-a9c1a49bb020\",                        [{\"close\":[14.562694549560547,14.543696403503418,14.258711814880371,14.03072452545166,13.802736282348633,13.916729927062988,13.945229530334473,14.135218620300293,14.239712715148926,14.344206809997559,14.059223175048828,13.850234031677246,13.812235832214355,13.764739036560059,13.954728126525879,13.964227676391602,14.31570816040039,14.249212265014648,14.629190444946289,14.182716369628906,14.22071361541748,14.106719970703125,13.793237686157227,13.73624038696289,13.688742637634277,13.574748992919922,13.451255798339844,13.812235832214355,14.011725425720215,14.116219520568848,14.306209564208984,14.61019229888916,14.325207710266113,14.106719970703125,14.03072452545166,13.726740837097168,13.973727226257324,14.06872272491455,14.097220420837402,14.439201354980469,13.793237686157227,13.470255851745605,13.232769012451172,12.757795333862305,12.767293930053711,13.232769012451172,12.710297584533691,12.520308494567871,12.653300285339355,12.795792579650879,13.090275764465332,13.232769012451172,13.536751747131348,13.470255851745605,13.660244941711426,13.479754447937012,13.489253997802734,13.60324764251709,14.002225875854492,14.486699104309082,14.410703659057617,14.629190444946289,14.619691848754883,14.429701805114746,14.31570816040039,14.201714515686035,14.306209564208984,14.182716369628906,14.439201354980469,14.296710014343262,14.08772087097168,13.964227676391602,13.973727226257324,13.916729927062988,13.99272632598877,14.011725425720215,14.363205909729004,14.011725425720215,13.945229530334473,13.973727226257324,13.793237686157227,13.745739936828613,13.527252197265625,13.622246742248535,13.042778015136719,12.852788925170898,13.004780769348145,13.042778015136719,13.2517671585083,13.755239486694336,13.812235832214355,13.954728126525879,13.99272632598877,13.50825309753418,13.432257652282715,13.31826400756836,13.375260353088379,13.422758102416992,13.337262153625488,13.498753547668457,13.498753547668457,13.384759902954102,13.479754447937012,13.41325855255127,13.41325855255127,13.375260353088379,13.346762657165527,13.042778015136719,13.071277618408203,12.928784370422363,12.909786224365234,12.662799835205078,12.491808891296387,12.406314849853516,12.377815246582031,12.396814346313477,12.510807991027832,12.63430118560791,12.662799835205078,12.9857816696167,13.033279418945312,12.843290328979492,12.928784370422363,12.72929573059082,13.071277618408203,12.995282173156738,13.384759902954102,13.517751693725586,13.517751693725586,13.593749046325684,13.394259452819824,13.099775314331055,13.840734481811523,14.097220420837402,13.859733581542969,13.764739036560059,13.755239486694336,13.584249496459961,13.831235885620117,13.783738136291504,13.945229530334473,14.078221321105957,14.230213165283203,14.344206809997559,14.182716369628906,13.89773178100586,13.973727226257324,13.89773178100586,13.945229530334473,13.869233131408691,14.059223175048828,14.002225875854492,14.401203155517578,14.372705459594727,14.448700904846191,14.64819049835205,14.724185943603516,14.771683692932129,15.199159622192383,14.876177787780762,14.64819049835205,14.66718864440918,15.009170532226562,15.028168678283691,14.885677337646484,14.828680038452148,14.619691848754883,14.505698204040527,14.657690048217773,14.70518684387207,14.771683692932129,14.781183242797852,14.724185943603516,14.933174133300781,14.914175033569336,14.809680938720703,14.61019229888916,14.534196853637695,14.505698204040527,14.695687294006348,14.971172332763672,14.771683692932129,14.885677337646484,14.600692749023438,14.505698204040527,14.66718864440918,14.933174133300781,14.828680038452148,14.762184143066406,15.484143257141113,15.427146911621094,15.313154220581055,15.34165096282959,14.64819049835205,14.439201354980469,14.239712715148926,14.258711814880371,14.08772087097168,14.173216819763184,14.154216766357422,14.144718170166016,14.287210464477539,14.543696403503418,14.42020320892334,14.163716316223145,14.344206809997559,14.781183242797852,14.980671882629395,15.199159622192383,14.99967098236084,15.218158721923828,15.626636505126953,15.541141510009766,15.902120590209961,15.655134201049805,15.18966007232666,15.28465461730957,15.15166187286377,14.66718864440918,14.629190444946289,14.838179588317871,14.885677337646484,14.876177787780762,14.933174133300781,15.23715877532959,14.980671882629395,15.113664627075195,14.971172332763672,15.123164176940918,15.275155067443848,15.512641906738281,15.218158721923828,15.24665641784668,15.199159622192383,14.914175033569336,14.733685493469238,14.47719955444336,14.515196800231934,14.372705459594727,14.249212265014648,14.106719970703125,14.467700004577637,14.520000457763672,14.350000381469727,14.420000076293945,14.619999885559082,14.520000457763672,14.520000457763672,14.550000190734863,14.520000457763672,14.1899995803833,14.170000076293945,14.25,14.289999961853027,14.319999694824219,14.399999618530273,14.539999961853027,14.289999961853027,14.100000381469727,13.880000114440918,13.199999809265137,13.859999656677246,13.779999732971191,13.640000343322754,13.529999732971191,13.420000076293945,13.609999656677246,13.710000038146973,13.739999771118164,13.649999618530273,13.529999732971191,13.65999984741211,13.180000305175781,13.109999656677246,12.979999542236328,13.020000457763672,12.960000038146973,13.1899995803833,13.020000457763672,12.859999656677246,13.130000114440918,13.0,13.229999542236328,13.079999923706055,13.199999809265137,13.210000038146973,13.25,13.319999694824219,13.399999618530273,13.390000343322754,13.470000267028809,13.130000114440918,13.109999656677246,13.5,13.430000305175781,13.619999885559082,13.600000381469727,13.510000228881836,13.609999656677246,13.949999809265137,14.020000457763672,14.260000228881836,14.220000267028809,14.119999885559082,13.949999809265137,13.949999809265137,13.779999732971191,13.890000343322754,13.930000305175781,14.59000015258789,14.8100004196167,14.819999694824219,14.329999923706055,14.329999923706055,14.430000305175781,14.399999618530273,14.430000305175781,14.460000038146973,14.779999732971191,14.760000228881836,14.59000015258789,14.649999618530273,14.75,14.630000114440918,14.579999923706055,14.600000381469727,14.34000015258789,14.289999961853027,14.210000038146973,14.15999984741211,14.15999984741211,14.260000228881836,14.579999923706055,14.630000114440918,14.489999771118164,14.510000228881836,14.350000381469727],\"decreasing\":{\"line\":{\"color\":\"red\"}},\"high\":[14.762183553223315,14.62919091621946,14.524696854174211,14.306209254703145,14.059222530326238,13.992725651390147,13.992726180379165,14.277710380016703,14.296709963392809,14.448700703013843,14.410703641182483,14.002225481834063,13.945228800827707,13.897732012495613,14.173216518702906,14.296709654424465,14.334707544754556,14.534196691503045,14.71468586084865,14.553195312338282,14.363205370894534,14.372705002584002,14.192214789713205,13.888231836487932,13.812235915100503,13.783737685100727,13.612746937930856,13.88823155543899,14.078221459873514,14.344207609030475,14.3347077351783,14.91417520150162,14.705186334169525,14.353705618765126,14.239712315959338,14.106720370787018,14.078221121118212,14.496198914208236,14.097220420837402,14.56269463472635,14.230212652239512,13.783738454546013,13.527252231182661,13.099776110912549,13.042778667276922,13.299265047789147,13.099775912310152,12.881288657740026,12.786293260166655,12.985781891053536,13.156772702803055,13.318264432708874,13.536751747131348,13.641245785856398,13.774238531187704,13.66024497787432,13.641245449235248,13.631746719233684,14.011725568241738,14.629190864270344,14.534196942869736,14.800181276751013,14.885676885951359,14.676688367041418,14.515197166416595,14.334707487815411,14.38220529075417,14.37270568716455,14.667188530231094,14.762184070555143,14.363205600317311,14.16371668202322,14.05922264293464,14.021224727468203,14.268211972381684,14.23021291276135,14.42970194398749,14.391704057939808,14.163717019549756,14.125718675487889,14.249212036472919,13.9737271087574,13.964228083977828,13.698242466689882,13.612746845829946,13.13777334535754,13.156773129087194,13.327762430483332,13.451256165451028,13.774238871713676,13.935729108939508,14.106720484794494,14.144718687911235,14.078221028394816,13.593748795864357,13.574749354213502,13.432257600106592,13.479754444320466,13.422757569023805,13.565249580483904,13.650744997498338,13.660244631075676,13.555751080396234,13.527252143509205,13.584249391958439,13.60324752928022,13.489254420867363,13.270766090978299,13.232768763424653,13.137773061502553,12.985781949266975,12.881288226681729,12.700797588747406,12.681799590863942,12.47281035569841,12.586803654246076,12.643800960188226,12.719796600513106,12.710297390390481,13.080776776668397,13.156772697591602,13.11877506118101,13.01427978522519,12.862288702476818,13.109275481592043,13.118775457660776,13.43225745730758,13.669744045760728,13.660244353894692,13.641245696303212,13.622246624167614,13.40375820877977,13.93572959210614,14.211214007077807,14.135218308609794,13.983227432315575,14.021225441321858,13.831236065072451,13.859734056723953,13.888232032832121,14.040223736364387,14.13521856834734,14.344207662912487,15.009169841613103,14.467699892962111,14.144718343940548,14.049722950872606,14.078221404110122,14.05922312113469,14.192214503396153,14.078221653951454,14.125719159067113,14.429701325272054,14.543696295639693,14.591192661489803,14.724186225751655,14.828679840290505,14.84767941987422,15.21815900657157,15.40814788341252,14.980672485180719,14.743185276024827,15.094665951328532,15.275155237790827,15.10416482691688,14.904675765411069,14.942673226666066,14.83817927273662,14.914175399212018,14.952173410940441,14.828680035168434,14.876177447589479,14.952173121433589,14.971171994975725,15.00917014253635,15.085165663880991,14.809681305213715,14.667188923126146,14.629190577081033,14.752683633636405,14.97117233276367,15.075666600700492,14.933174893643688,14.705186646329938,14.714685993755614,14.819181001699965,15.009169856650669,14.971172705955517,14.904675905973049,15.503142641663596,15.674133474708897,15.512642322274202,15.446145762183985,15.237158744609784,14.6956876065928,14.505698665699681,14.40120357373123,14.363205600317311,14.306209796345497,14.372705152856462,14.28720992844825,14.353706500045321,14.581694266690722,14.572194662592327,14.439201040129078,14.39170345758829,14.971172558321623,14.980671882629396,15.21815900657157,15.332152063654625,15.237158105947639,15.731129494071658,15.788128074737083,15.940119359094778,16.03511283469062,15.65513412269197,15.389149416624193,15.560138666431898,15.189659937881132,14.752683722811868,15.047168288418268,15.009170620863003,15.085166492606364,15.056667410229469,15.398648110983402,15.265655395945066,15.199160047291697,15.246656156667273,15.199159903985604,15.351150791684626,15.721629695087394,15.38914955437616,15.389149990179538,15.332151689084641,15.161161592131167,15.009170223837202,14.705186734999822,14.809680908708806,14.45820087761721,14.45820096523154,14.38220469449344,14.69568809331982,14.680000305175781,14.710000038146973,14.539999961853027,14.760000228881836,14.640000343322754,14.65999984741211,14.729999542236328,14.670000076293945,14.449999809265137,14.390000343322754,14.470000267028809,14.40999984741211,14.359999656677246,14.470000267028809,14.600000381469727,14.789999961853027,14.170000076293945,14.050000190734863,13.739999771118164,13.949999809265137,14.0600004196167,13.850000381469727,13.640000343322754,13.680000305175781,13.609999656677246,13.739999771118164,13.850000381469727,13.75,13.699999809265137,13.739999771118164,13.729999542236328,13.529999732971191,13.220000267028809,13.199999809265137,13.079999923706055,13.239999771118164,13.229999542236328,12.989999771118164,13.170000076293945,13.359999656677246,13.369999885559082,13.300000190734863,13.25,13.3100004196167,13.399999618530273,13.399999618530273,13.460000038146973,13.59000015258789,13.630000114440918,13.539999961853027,13.220000267028809,13.579999923706055,13.619999885559082,13.640000343322754,13.779999732971191,13.699999809265137,13.729999542236328,14.079999923706055,14.100000381469727,14.40999984741211,14.399999618530273,14.270000457763672,14.180000305175781,14.09000015258789,14.149999618530273,14.020000457763672,14.109999656677246,15.029999732971191,14.920000076293945,15.050000190734863,14.920000076293945,14.350000381469727,14.619999885559082,14.630000114440918,14.609999656677246,14.779999732971191,14.869999885559082,14.930000305175781,14.84000015258789,14.729999542236328,14.770000457763672,14.819999694824219,14.680000305175781,14.800000190734863,14.739999771118164,14.380000114440918,14.380000114440918,14.25,14.220000267028809,14.319999694824219,14.680000305175781,15.3100004196167,14.710000038146973,14.640000343322754,14.489999771118164],\"increasing\":{\"line\":{\"color\":\"green\"}},\"low\":[14.391703716152318,14.287210147533735,14.211214259949916,13.926229724257322,13.726740558342044,13.631746413806392,13.72674113517866,13.831235716403679,14.021225226418514,14.154216595872706,14.049723482627249,13.669744411101151,13.669744077653286,13.70774269397377,13.688743084951707,13.878732258843694,13.878732285600153,14.135218675607392,14.182715793363599,14.116219429036036,14.03072430613458,14.049722725186982,13.726740747280811,13.69824252458163,13.460755466592241,13.55575051505284,13.403758244470637,13.4417560020389,13.6887431353633,14.011725621731811,14.08772117093619,14.353706045354517,14.21121412309509,13.973727001792446,14.002225449158386,13.726740837097168,13.717240976225373,13.859734023460105,13.109275100813404,13.945229141937448,13.698242576871206,13.346762567924152,13.128274207273744,12.55830632076453,12.61530247585339,12.90028702388023,12.577304609171266,12.406314901872541,12.501308831788453,12.681798992809284,12.738795312459207,13.004780923117123,13.10927555735741,13.356262260358232,13.498753796801571,13.365760858158959,13.356261930769541,13.25176718314373,13.660245103378369,14.125718952341307,14.268211896319304,14.372705103179689,14.372705289816476,14.32520790857985,14.306209374163815,14.068722449497164,14.078221478632912,14.002225838514649,14.002225482779853,14.230213073498328,13.821735833727056,13.736240500224186,13.869233331396435,13.688742754081513,13.831236083463375,13.821736109610418,13.897731858038558,14.002225733429595,13.907231666734399,13.888231809580008,13.793237686157227,13.603247274917756,13.451256469658333,13.308764152442858,12.938284122083836,12.852788925170897,12.700797861751097,13.033279229179534,12.957283947175068,13.099776104516282,13.72674041710152,13.688743084951707,13.935729982965816,13.470255235476806,13.261266816504387,13.137773480354642,13.156772869056326,13.156773059672895,13.21376887648797,13.280265159082626,13.337262405739082,13.308764178364736,13.356262071799511,13.346762517644272,13.185271370635396,13.337262490389739,13.261267236568212,12.92878443018617,12.862288917926824,12.890786508947828,12.605803324758268,12.529806861874052,12.33981744076492,12.358817293277815,12.168827456030797,12.235323208085646,12.292319606402934,12.406314016487704,12.586804109284639,12.662799392769507,12.957283694538441,12.710297356008223,12.681798723808116,12.681799081862001,12.634301738823785,12.928785231691155,12.843290138769747,13.318263600181702,13.299264216449629,13.413258515025177,13.327762515054685,12.852788759621228,13.109275393928826,13.650744861940447,13.840734197498122,13.68874330915132,13.698243143517395,13.40375896326601,13.470255729856266,13.641245470891919,13.72674113517866,13.82173597337101,13.91673056165401,13.992725457430868,14.087721257890822,13.707742465648602,13.783737914719119,13.679243388889628,13.679243579193436,13.840734055633531,13.783738436406745,13.888232285029117,14.01172484709128,14.306209425995247,14.325207626316166,14.30620972505383,14.562694799488753,14.581694375576904,14.809681301824186,14.76218419585967,14.572194770952446,14.524696885253425,14.657690069427765,14.961672645316577,14.828680089261734,14.733685832723763,14.49619856928568,14.505698204040527,14.334707756940155,14.581694466278417,14.66718888893136,14.619692098117513,14.58169418394485,14.705186057310632,14.800181446373223,14.714685831034885,14.505698402601256,14.477199605327982,14.382204925059522,14.420202569953116,14.553194938968163,14.69568796599004,14.629191078825903,14.410703433038655,14.410703095304216,14.486699022415856,14.610191856093513,14.695687969244304,14.676688722946206,14.752684165895333,15.284655151499946,15.151662170082785,15.180159823773238,14.534196907252644,14.306209289054523,14.19221515926911,13.964227699063954,14.049723008508163,14.030725056663982,14.078221042168321,14.040223368547908,14.154217487401437,14.201714728877173,14.268211755254352,14.087720592796714,13.869233086566387,14.44870126117586,14.705186249460725,14.914175198088175,14.980672503458026,14.68618774648351,15.237158189897887,15.493643048400063,15.3796502012109,15.598137858973946,15.075666482804982,14.876176923858933,14.99017073147387,14.600692610928562,14.249211825314108,14.648190272745017,14.743185575595403,14.724186331885972,14.771682994697146,14.96167313052495,14.90467525234599,14.933175000127441,14.904675393876815,14.876177611075425,15.08516575684191,15.15166176421641,15.170661167804791,15.123164041956711,15.07566634154921,14.828679616687127,14.733685493469238,14.325208100739049,14.382204736869882,13.983227138328319,14.154217154205009,14.049722725186982,14.173216786610636,14.25,14.3100004196167,14.279999732971191,14.460000038146973,14.449999809265137,14.420000076293945,14.520000457763672,14.430000305175781,14.020000457763672,14.109999656677246,14.079999923706055,14.140000343322754,14.15999984741211,14.270000457763672,14.25,13.949999809265137,13.65999984741211,13.770000457763672,13.180000305175781,13.199999809265137,13.729999542236328,13.550000190734863,13.369999885559082,13.359999656677246,13.34000015258789,13.470000267028809,13.529999732971191,13.59000015258789,13.4399995803833,13.5,12.850000381469727,13.0,12.90999984741211,12.949999809265137,12.890000343322754,12.930000305175781,12.949999809265137,12.600000381469727,12.850000381469727,12.989999771118164,12.930000305175781,12.960000038146973,13.010000228881836,13.050000190734863,13.119999885559082,13.079999923706055,13.260000228881836,13.34000015258789,13.260000228881836,13.069999694824219,12.989999771118164,13.130000114440918,13.300000190734863,13.350000381469727,13.5600004196167,13.460000038146973,13.470000267028809,13.59000015258789,13.75,14.0,14.09000015258789,14.050000190734863,13.899999618530273,13.890000343322754,13.670000076293945,13.75,13.880000114440918,13.899999618530273,14.489999771118164,14.75,14.1899995803833,14.039999961853027,14.229999542236328,14.210000038146973,14.239999771118164,14.34000015258789,14.390000343322754,14.640000343322754,14.430000305175781,14.4399995803833,14.569999694824219,14.539999961853027,14.430000305175781,14.5600004196167,14.270000457763672,14.0600004196167,14.149999618530273,14.010000228881836,13.979999542236328,13.960000038146973,14.130000114440918,14.470000267028809,14.300000190734863,14.430000305175781,14.279999732971191],\"name\":\"\",\"open\":[14.648189966264662,14.553195189844855,14.48669899141795,14.287209870507628,14.059222530326238,13.717240924219073,13.878732589578949,13.907231442377832,14.125719124601686,14.230212319146453,14.287210357523545,14.002225481834063,13.916729725163108,13.888232320084388,13.726740948033731,14.04972309393951,13.907231362131403,14.429701888424338,14.30620907122918,14.477199585324025,14.1542166777131,14.192214480066616,14.10672027848439,13.812236111725412,13.698242329579484,13.707741961751431,13.54625090607826,13.4417560020389,13.840734588251138,14.078221656815332,14.23021293172328,14.353706045354517,14.676688163861893,14.334707140886733,14.220713837704322,14.087720986429296,13.717240976225373,13.888232194495545,13.527251583694888,13.945229141937448,13.954727922438657,13.783738454546013,13.498754059743606,13.099776110912549,12.72929606650363,12.919286408799957,13.080777433510107,12.824291408422088,12.558306079840303,12.681798992809284,12.824290728935924,13.118775420754416,13.156773113096852,13.356262260358232,13.603247694003029,13.593748943655587,13.489253997802734,13.565249779502146,13.707742659374073,14.201714678446047,14.496199079076817,14.467699305117488,14.80968116103808,14.619692025637116,14.391703885936039,14.27771024091982,14.182716282087931,14.192215156050294,14.078221207863395,14.63869078720373,14.258711705027762,14.097220648792849,13.888231809580008,13.831235416650307,13.964228154477293,13.821736109610418,14.021225140190404,14.28721016056455,14.144718540719984,13.973727226257324,14.10672027848439,13.850233830810852,13.726741208719902,13.413258047064586,13.612746845829946,13.042778236648493,12.729296032853188,13.118774644377567,13.033279673063676,13.166272140202892,13.821735524102555,13.80273667419778,14.097221131431747,13.983226826221623,13.536751548624743,13.536751491527536,13.432257600106592,13.299264820372104,13.413257877103884,13.337262405739082,13.470255377310478,13.58424890648631,13.460755969277598,13.432257937347858,13.574749699560146,13.394259737407952,13.413258692767647,13.22326853743045,12.947784336575594,13.042777954845974,12.871788361914364,12.767293731860555,12.66279972611454,12.681799590863942,12.235323488847962,12.339817100963456,12.425312575563328,12.520307601047806,12.681799219655446,12.729295424141407,13.042778205040799,13.023779951067173,12.824290477852509,12.700797560165428,12.681799294288714,13.033280037162553,12.938284341536207,13.356261461705367,13.631746184237063,13.527252105664195,13.498753346535771,13.40375820877977,13.109275393928826,13.660244553945605,14.068722276333817,13.869233841202469,13.764739179204005,13.688743395823458,13.527252072063938,13.812236306995215,13.802736862378804,13.95472804036672,14.106720787075794,14.66718818094075,14.37270568716455,14.116219267181572,13.831235469088794,13.992725985714229,14.011725565149465,13.99272550267245,13.94522958381147,14.097220987845901,14.201714155355269,14.543696295639693,14.496198459040894,14.37270576004335,14.66718869617574,14.686188273637146,14.876177335270315,15.094666185084922,14.92367523666075,14.581694132480033,14.667188855818688,15.15166195803726,15.094666040469862,14.86667790193161,14.914175056308713,14.648189961204496,14.591193107934398,14.69568805740062,14.819181248756067,14.667188747543069,14.81918105400297,14.724185441118346,14.999670450451548,14.819180630677383,14.809681305213715,14.61019258075696,14.477199127855334,14.534196155153714,14.705186389097255,14.98067239499314,14.923675201256142,14.629190919936025,14.591192714774609,14.6196919953176,14.648189717768458,14.809681559682682,14.819181391793384,15.009170421305754,15.674133474708897,15.493642937765987,15.436646070253497,15.161162111269649,14.686187914472232,14.42020324630412,14.078221287332742,14.268211397128768,14.173216819763184,14.30620912067612,14.182716032770646,14.211214736417064,14.239712592064475,14.401203824244453,14.42020256224271,14.05922239475076,14.486699124280614,14.781182879744131,14.980672137474814,15.227659070778346,14.733685300602545,15.360650562971081,15.512642433043945,15.446146234878304,15.778628389408723,15.351151217300833,14.971172031246681,15.512642017974104,15.142162382849044,14.534196243008488,14.781183246616273,14.990171236087908,14.914175651754459,14.866677195914265,15.094666106712653,15.227658439714105,15.009170727888659,15.113664090774568,14.971172722851547,15.123163618962298,15.34165107450674,15.227658413935734,15.389149990179538,15.322651996895049,15.151661900046367,14.990170839564685,14.705186734999822,14.524696492169362,14.429701800982707,14.258711957283715,14.239712033673323,14.230213129340783,14.40999984741211,14.569999694824219,14.390000343322754,14.5,14.569999694824219,14.600000381469727,14.600000381469727,14.670000076293945,14.399999618530273,14.15999984741211,14.279999732971191,14.270000457763672,14.300000190734863,14.289999961853027,14.260000228881836,14.510000228881836,13.800000190734863,14.0,13.720000267028809,13.300000190734863,13.930000305175781,13.670000076293945,13.550000190734863,13.5600004196167,13.420000076293945,13.550000190734863,13.699999809265137,13.75,13.6899995803833,13.619999885559082,13.640000343322754,13.0600004196167,13.069999694824219,13.039999961853027,13.020000457763672,13.039999961853027,13.149999618530273,12.979999542236328,12.859999656677246,13.149999618530273,12.989999771118164,13.25,13.039999961853027,13.050000190734863,13.210000038146973,13.220000267028809,13.380000114440918,13.430000305175781,13.420000076293945,13.470000267028809,13.119999885559082,13.180000305175781,13.470000267028809,13.399999618530273,13.5600004196167,13.520000457763672,13.5,13.609999656677246,13.800000190734863,14.0,14.199999809265137,14.199999809265137,14.140000343322754,13.90999984741211,14.010000228881836,13.84000015258789,14.0,13.949999809265137,14.65999984741211,15.0,14.869999885559082,14.229999542236328,14.40999984741211,14.510000228881836,14.239999771118164,14.5,14.489999771118164,14.819999694824219,14.729999542236328,14.5,14.729999542236328,14.760000228881836,14.529999732971191,14.609999656677246,14.65999984741211,14.279999732971191,14.199999809265137,14.180000305175781,14.100000381469727,14.0600004196167,14.25,15.199999809265137,14.670000076293945,14.569999694824219,14.4399995803833],\"showlegend\":false,\"x\":[\"2022-01-03T00:00:00\",\"2022-01-04T00:00:00\",\"2022-01-05T00:00:00\",\"2022-01-06T00:00:00\",\"2022-01-07T00:00:00\",\"2022-01-10T00:00:00\",\"2022-01-11T00:00:00\",\"2022-01-12T00:00:00\",\"2022-01-13T00:00:00\",\"2022-01-14T00:00:00\",\"2022-01-17T00:00:00\",\"2022-01-18T00:00:00\",\"2022-01-19T00:00:00\",\"2022-01-20T00:00:00\",\"2022-01-21T00:00:00\",\"2022-01-24T00:00:00\",\"2022-01-25T00:00:00\",\"2022-01-26T00:00:00\",\"2022-01-27T00:00:00\",\"2022-01-28T00:00:00\",\"2022-01-31T00:00:00\",\"2022-02-01T00:00:00\",\"2022-02-02T00:00:00\",\"2022-02-03T00:00:00\",\"2022-02-04T00:00:00\",\"2022-02-07T00:00:00\",\"2022-02-08T00:00:00\",\"2022-02-09T00:00:00\",\"2022-02-10T00:00:00\",\"2022-02-11T00:00:00\",\"2022-02-14T00:00:00\",\"2022-02-15T00:00:00\",\"2022-02-16T00:00:00\",\"2022-02-17T00:00:00\",\"2022-02-18T00:00:00\",\"2022-02-21T00:00:00\",\"2022-02-22T00:00:00\",\"2022-02-23T00:00:00\",\"2022-02-24T00:00:00\",\"2022-02-25T00:00:00\",\"2022-03-02T00:00:00\",\"2022-03-03T00:00:00\",\"2022-03-04T00:00:00\",\"2022-03-07T00:00:00\",\"2022-03-08T00:00:00\",\"2022-03-09T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-14T00:00:00\",\"2022-03-15T00:00:00\",\"2022-03-16T00:00:00\",\"2022-03-17T00:00:00\",\"2022-03-18T00:00:00\",\"2022-03-21T00:00:00\",\"2022-03-22T00:00:00\",\"2022-03-23T00:00:00\",\"2022-03-24T00:00:00\",\"2022-03-25T00:00:00\",\"2022-03-28T00:00:00\",\"2022-03-29T00:00:00\",\"2022-03-30T00:00:00\",\"2022-03-31T00:00:00\",\"2022-04-01T00:00:00\",\"2022-04-04T00:00:00\",\"2022-04-05T00:00:00\",\"2022-04-06T00:00:00\",\"2022-04-07T00:00:00\",\"2022-04-08T00:00:00\",\"2022-04-11T00:00:00\",\"2022-04-12T00:00:00\",\"2022-04-13T00:00:00\",\"2022-04-14T00:00:00\",\"2022-04-18T00:00:00\",\"2022-04-19T00:00:00\",\"2022-04-20T00:00:00\",\"2022-04-22T00:00:00\",\"2022-04-25T00:00:00\",\"2022-04-26T00:00:00\",\"2022-04-27T00:00:00\",\"2022-04-28T00:00:00\",\"2022-04-29T00:00:00\",\"2022-05-02T00:00:00\",\"2022-05-03T00:00:00\",\"2022-05-04T00:00:00\",\"2022-05-05T00:00:00\",\"2022-05-06T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-10T00:00:00\",\"2022-05-11T00:00:00\",\"2022-05-12T00:00:00\",\"2022-05-13T00:00:00\",\"2022-05-16T00:00:00\",\"2022-05-17T00:00:00\",\"2022-05-18T00:00:00\",\"2022-05-19T00:00:00\",\"2022-05-20T00:00:00\",\"2022-05-23T00:00:00\",\"2022-05-24T00:00:00\",\"2022-05-25T00:00:00\",\"2022-05-26T00:00:00\",\"2022-05-27T00:00:00\",\"2022-05-30T00:00:00\",\"2022-05-31T00:00:00\",\"2022-06-01T00:00:00\",\"2022-06-02T00:00:00\",\"2022-06-03T00:00:00\",\"2022-06-06T00:00:00\",\"2022-06-07T00:00:00\",\"2022-06-08T00:00:00\",\"2022-06-09T00:00:00\",\"2022-06-10T00:00:00\",\"2022-06-13T00:00:00\",\"2022-06-14T00:00:00\",\"2022-06-15T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-20T00:00:00\",\"2022-06-21T00:00:00\",\"2022-06-22T00:00:00\",\"2022-06-23T00:00:00\",\"2022-06-24T00:00:00\",\"2022-06-27T00:00:00\",\"2022-06-28T00:00:00\",\"2022-06-29T00:00:00\",\"2022-06-30T00:00:00\",\"2022-07-01T00:00:00\",\"2022-07-04T00:00:00\",\"2022-07-05T00:00:00\",\"2022-07-06T00:00:00\",\"2022-07-07T00:00:00\",\"2022-07-08T00:00:00\",\"2022-07-11T00:00:00\",\"2022-07-12T00:00:00\",\"2022-07-13T00:00:00\",\"2022-07-14T00:00:00\",\"2022-07-15T00:00:00\",\"2022-07-18T00:00:00\",\"2022-07-19T00:00:00\",\"2022-07-20T00:00:00\",\"2022-07-21T00:00:00\",\"2022-07-22T00:00:00\",\"2022-07-25T00:00:00\",\"2022-07-26T00:00:00\",\"2022-07-27T00:00:00\",\"2022-07-28T00:00:00\",\"2022-07-29T00:00:00\",\"2022-08-01T00:00:00\",\"2022-08-02T00:00:00\",\"2022-08-03T00:00:00\",\"2022-08-04T00:00:00\",\"2022-08-05T00:00:00\",\"2022-08-08T00:00:00\",\"2022-08-09T00:00:00\",\"2022-08-10T00:00:00\",\"2022-08-11T00:00:00\",\"2022-08-12T00:00:00\",\"2022-08-15T00:00:00\",\"2022-08-16T00:00:00\",\"2022-08-17T00:00:00\",\"2022-08-18T00:00:00\",\"2022-08-19T00:00:00\",\"2022-08-22T00:00:00\",\"2022-08-23T00:00:00\",\"2022-08-24T00:00:00\",\"2022-08-25T00:00:00\",\"2022-08-26T00:00:00\",\"2022-08-29T00:00:00\",\"2022-08-30T00:00:00\",\"2022-08-31T00:00:00\",\"2022-09-01T00:00:00\",\"2022-09-02T00:00:00\",\"2022-09-05T00:00:00\",\"2022-09-06T00:00:00\",\"2022-09-08T00:00:00\",\"2022-09-09T00:00:00\",\"2022-09-12T00:00:00\",\"2022-09-13T00:00:00\",\"2022-09-14T00:00:00\",\"2022-09-15T00:00:00\",\"2022-09-16T00:00:00\",\"2022-09-19T00:00:00\",\"2022-09-20T00:00:00\",\"2022-09-21T00:00:00\",\"2022-09-22T00:00:00\",\"2022-09-23T00:00:00\",\"2022-09-26T00:00:00\",\"2022-09-27T00:00:00\",\"2022-09-28T00:00:00\",\"2022-09-29T00:00:00\",\"2022-09-30T00:00:00\",\"2022-10-03T00:00:00\",\"2022-10-04T00:00:00\",\"2022-10-05T00:00:00\",\"2022-10-06T00:00:00\",\"2022-10-07T00:00:00\",\"2022-10-10T00:00:00\",\"2022-10-11T00:00:00\",\"2022-10-13T00:00:00\",\"2022-10-14T00:00:00\",\"2022-10-17T00:00:00\",\"2022-10-18T00:00:00\",\"2022-10-19T00:00:00\",\"2022-10-20T00:00:00\",\"2022-10-21T00:00:00\",\"2022-10-24T00:00:00\",\"2022-10-25T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-27T00:00:00\",\"2022-10-28T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-01T00:00:00\",\"2022-11-03T00:00:00\",\"2022-11-04T00:00:00\",\"2022-11-07T00:00:00\",\"2022-11-08T00:00:00\",\"2022-11-09T00:00:00\",\"2022-11-10T00:00:00\",\"2022-11-11T00:00:00\",\"2022-11-14T00:00:00\",\"2022-11-16T00:00:00\",\"2022-11-17T00:00:00\",\"2022-11-18T00:00:00\",\"2022-11-21T00:00:00\",\"2022-11-22T00:00:00\",\"2022-11-23T00:00:00\",\"2022-11-24T00:00:00\",\"2022-11-25T00:00:00\",\"2022-11-28T00:00:00\",\"2022-11-29T00:00:00\",\"2022-11-30T00:00:00\",\"2022-12-01T00:00:00\",\"2022-12-02T00:00:00\",\"2022-12-05T00:00:00\",\"2022-12-06T00:00:00\",\"2022-12-07T00:00:00\",\"2022-12-08T00:00:00\",\"2022-12-09T00:00:00\",\"2022-12-12T00:00:00\",\"2022-12-13T00:00:00\",\"2022-12-14T00:00:00\",\"2022-12-15T00:00:00\",\"2022-12-16T00:00:00\",\"2022-12-19T00:00:00\",\"2022-12-20T00:00:00\",\"2022-12-21T00:00:00\",\"2022-12-22T00:00:00\",\"2022-12-23T00:00:00\",\"2022-12-26T00:00:00\",\"2022-12-27T00:00:00\",\"2022-12-28T00:00:00\",\"2022-12-29T00:00:00\",\"2023-01-02T00:00:00\",\"2023-01-03T00:00:00\",\"2023-01-04T00:00:00\",\"2023-01-05T00:00:00\",\"2023-01-06T00:00:00\",\"2023-01-09T00:00:00\",\"2023-01-10T00:00:00\",\"2023-01-11T00:00:00\",\"2023-01-12T00:00:00\",\"2023-01-13T00:00:00\",\"2023-01-16T00:00:00\",\"2023-01-17T00:00:00\",\"2023-01-18T00:00:00\",\"2023-01-19T00:00:00\",\"2023-01-20T00:00:00\",\"2023-01-23T00:00:00\",\"2023-01-24T00:00:00\",\"2023-01-25T00:00:00\",\"2023-01-26T00:00:00\",\"2023-01-27T00:00:00\",\"2023-01-30T00:00:00\",\"2023-01-31T00:00:00\",\"2023-02-01T00:00:00\",\"2023-02-02T00:00:00\",\"2023-02-03T00:00:00\",\"2023-02-06T00:00:00\",\"2023-02-07T00:00:00\",\"2023-02-08T00:00:00\",\"2023-02-09T00:00:00\",\"2023-02-10T00:00:00\",\"2023-02-13T00:00:00\",\"2023-02-14T00:00:00\",\"2023-02-15T00:00:00\",\"2023-02-16T00:00:00\",\"2023-02-17T00:00:00\",\"2023-02-22T00:00:00\",\"2023-02-23T00:00:00\",\"2023-02-24T00:00:00\",\"2023-02-27T00:00:00\",\"2023-02-28T00:00:00\",\"2023-03-01T00:00:00\",\"2023-03-02T00:00:00\",\"2023-03-03T00:00:00\",\"2023-03-06T00:00:00\",\"2023-03-07T00:00:00\",\"2023-03-08T00:00:00\",\"2023-03-09T00:00:00\",\"2023-03-10T00:00:00\",\"2023-03-13T00:00:00\",\"2023-03-14T00:00:00\",\"2023-03-15T00:00:00\",\"2023-03-16T00:00:00\",\"2023-03-17T00:00:00\",\"2023-03-20T00:00:00\",\"2023-03-21T00:00:00\",\"2023-03-22T00:00:00\",\"2023-03-23T00:00:00\",\"2023-03-24T00:00:00\",\"2023-03-27T00:00:00\",\"2023-03-28T00:00:00\",\"2023-03-29T00:00:00\",\"2023-03-30T00:00:00\",\"2023-03-31T00:00:00\",\"2023-04-03T00:00:00\",\"2023-04-04T00:00:00\",\"2023-04-05T00:00:00\",\"2023-04-06T00:00:00\",\"2023-04-10T00:00:00\",\"2023-04-11T00:00:00\",\"2023-04-12T00:00:00\",\"2023-04-13T00:00:00\",\"2023-04-14T00:00:00\",\"2023-04-17T00:00:00\",\"2023-04-18T00:00:00\",\"2023-04-19T00:00:00\",\"2023-04-20T00:00:00\",\"2023-04-24T00:00:00\",\"2023-04-25T00:00:00\",\"2023-04-26T00:00:00\",\"2023-04-27T00:00:00\",\"2023-04-28T00:00:00\",\"2023-05-02T00:00:00\",\"2023-05-03T00:00:00\",\"2023-05-04T00:00:00\",\"2023-05-05T00:00:00\",\"2023-05-08T00:00:00\",\"2023-05-10T00:00:00\"],\"type\":\"candlestick\"},{\"line\":{\"color\":\"black\",\"dash\":\"solid\",\"width\":2},\"mode\":\"lines\",\"name\":\"Topos / Fundos\",\"showlegend\":true,\"x\":[\"2022-01-18T00:00:00\",\"2022-02-08T00:00:00\",\"2022-03-10T00:00:00\",\"2022-03-11T00:00:00\",\"2022-03-24T00:00:00\",\"2022-05-09T00:00:00\",\"2022-05-23T00:00:00\",\"2022-06-17T00:00:00\",\"2022-06-22T00:00:00\",\"2022-09-01T00:00:00\",\"2022-10-18T00:00:00\",\"2022-10-26T00:00:00\",\"2022-10-31T00:00:00\",\"2022-11-17T00:00:00\",\"2022-12-13T00:00:00\",\"2022-12-14T00:00:00\",\"2023-01-05T00:00:00\",\"2023-01-16T00:00:00\",\"2023-02-09T00:00:00\",\"2023-02-10T00:00:00\",\"2023-02-17T00:00:00\"],\"y\":[14.002225481834063,13.403758244470637,13.099775912310152,12.406314901872541,13.641245449235248,12.700797861751097,13.432257600106592,12.168827456030797,12.719796600513106,14.334707756940155,14.372705152856462,13.869233086566387,15.21815900657157,14.249211825314108,14.809680908708806,13.983227138328319,14.40999984741211,13.180000305175781,13.229999542236328,12.600000381469727,13.25],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"scatter\":[{\"type\":\"scatter\"}]}},\"xaxis\":{\"rangebreaks\":[{\"bounds\":[\"sat\",\"mond\"]}],\"rangeslider\":{\"visible\":false}},\"title\":{\"text\":\"<b>Indicador topos e fundos\"},\"margin\":{\"l\":75,\"r\":75,\"t\":75,\"b\":75},\"paper_bgcolor\":\"#f7f8fa\",\"width\":1200,\"height\":600},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('c700ac54-bc86-4c48-b597-a9c1a49bb020');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]}]}